<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C</title>
      <link href="posts/1037565863/"/>
      <url>posts/1037565863/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h1 id="c程序执行流程图解："><a href="#c程序执行流程图解：" class="headerlink" title="c程序执行流程图解："></a>c程序执行流程图解：</h1><p><img src= "/img/loading.gif" data-lazy-src="https://tva1.sinaimg.cn/large/00724TQEgy1grtfd17f6sj30qb0c17b9.jpg" alt="image-20210624161341384"></p><p><img src= "/img/loading.gif" data-lazy-src="https://tvax4.sinaimg.cn/large/00724TQEgy1grtfhvl6okj30p60bqajs.jpg" alt="image-20210624161900487"></p><h1 id="值传递和指针传递："><a href="#值传递和指针传递：" class="headerlink" title="值传递和指针传递："></a>值传递和指针传递：</h1><p>默认传递值的类型：基本数据类型（整数，小数，字符），结构体，公用体</p><p>默认传递地址的类型：指针、数组</p><h2 id="常量："><a href="#常量：" class="headerlink" title="常量："></a>常量：</h2><ul><li>常量是固定值，在程序执行期间不能改变。这些固定的值，又叫做<code>字面量</code></li><li>常量可以是任何的基本数据类型</li><li>常量的值在定义后不能进行修改</li></ul><p><code>整数常量：</code></p><p>整数常量可以是<code>十进制</code>、<code>八进制</code>或<code>十六进制</code>的常量。前缀指定基数：<code>0X</code>或<code>0x</code>表示<code>十六进制</code>，<code>0</code>表示<code>八进制</code>，<code>不带前缀</code>则默认表示<code>十进制</code>。整数常量也可以带一个后缀，后缀是<code>U和L</code>的组合，<code>U</code>表示<code>无符号整数（unsigned）</code>，<code>L</code>表示<code>长整数（long）</code>。后缀可以是大写，也可以是小写，U和L的顺序任意</p><p><code>浮点常量：</code></p><p>浮点常量由整数部分、小数点、小数部分和指数部分组成</p><p><code>字符常量：</code></p><p>字符常量是括在单引号中，它可以是一个普通字符、一个转义序列</p><p><code>字符串常量：</code></p><p>字符串字面值或常量是括再双引号中的。一个字符串包含类似于字符常量的字符：普通的字符、转义序列和通用的字符，字符串换行有两种形式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> str1[<span class="number">20</span>] = <span class="string">&quot;hello \</span></span><br><span class="line"><span class="string">word&quot;</span>;<span class="comment">// 这种换行会把word前的空格一起输出，如果不想要空格，需要把word放到最前面，例如：</span></span><br><span class="line"><span class="keyword">char</span> str2[<span class="number">20</span>] = <span class="string">&quot;hello \</span></span><br><span class="line"><span class="string">word&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> str3[<span class="number">20</span>] = <span class="string">&quot;hello&quot;</span></span><br><span class="line"><span class="string">&quot;word&quot;</span>;<span class="comment">// 不会输出任何空格，除非字符串内本身就有空格</span></span><br></pre></td></tr></table></figure><p>定义常量：</p><ul><li><code>#define</code>预处理器<ul><li>定义形式：#define 常量名 常量值</li></ul></li><li><code>const</code>关键字</li></ul><p><code>const</code>和<code>#define</code>的区别</p><ul><li><p>const定义的常量带类型，define不带类型</p></li><li><p>const是在编译、运行时起作用，而define是在编译的预处理阶段起作用</p></li><li><p>define只是简单的替换，没有类型检查。简单的字符串替换会导致<code>边界效应</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> A 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> B A+2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> C A/B * 3</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 由于define只是简单的替换，所以B为A+2</span></span><br><span class="line"><span class="comment">// C：A/A+2 * 3 -&gt; 2/2+2 * 3 -&gt; 1 + 6 -&gt; 7</span></span><br><span class="line">    <span class="comment">// 如果运算出正常结果，需要定义B为(A+2)</span></span><br><span class="line">    <span class="comment">// C：A/(A+2) * 3 -&gt; 2/(2+2) * 3 -&gt; 0 + 3 -&gt; 0</span></span><br><span class="line">    <span class="comment">// 2/(2+2)由于是整数运算，所以返回值也是整数，即值为0</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,C);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>const常量可以进行调试，define不行，主要是因为预编译阶段就已经替换掉了，调试的时候就不存在了</p></li><li><p>const不能重定义，不能定义两个一样的，而define可以通过undef取消某个符号的定义，再重新定义</p></li><li><p>define可以配合#ifdef、#ifndef、#endif来使用，可以让代码更灵活，比如通过#define来启动或者关闭调试信息</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEBUG</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,<span class="string">&quot;定义了DEBUG&quot;</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> DEBUG</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,<span class="string">&quot;没有定义DEBUG&quot;</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二进制和位运算"><a href="#二进制和位运算" class="headerlink" title="二进制和位运算"></a>二进制和位运算</h1><h2 id="进制："><a href="#进制：" class="headerlink" title="进制："></a>进制：</h2><ul><li>二进制：0，1，满2进1<ul><li>原码、反码、补码<ul><li>二进制的最高位是符号位：0表示整数，1表示负数</li><li>正数的原码、补码、反码都是一样的</li><li>负数的反码=它的原码符号位不变，其他位取反（0-&gt;1，1-&gt;0）</li><li>负数的补码=它的反码+1</li><li>0的反码、补码都是0</li><li>在计算机运算的时候，都是以<code>补码的方式</code>来运算的</li></ul></li></ul></li><li>十进制：0-9，满10进1</li><li>八进制：0-7，满8进1，以数字<code>0开头</code>表示</li><li>十六进制：0-9及A-F，满16进1，以<code>0x或0X开头</code>表示。A-F不区分大小写</li></ul><h2 id="进制转换："><a href="#进制转换：" class="headerlink" title="进制转换："></a>进制转换：</h2><ul><li>第一组（其他进制转十进制）<ul><li>二进制转十进制（从最低位开始，将每个位上的数提取出来，乘以2的（位数-1）次方，然后求和）<ul><li>1011 = 1 * 2^0 + 1 * 2^1 + 0 * 2^2 + 1 * 2^3 = 1 + 2 + 0 + 8 = 11</li></ul></li><li>八进制转十进制（从最低位开始，将每个位上的数提取出来，乘以8的（位数-1）次方，然后求和）<ul><li>0123 = 3 * 8^0 + 2 * 8^1 + 1 * 8^2 = 3 + 16 + 64  = 83</li></ul></li><li>十六进制转十进制（从最低位开始，将每个位上的数提取出来，乘以16的（位数-1）次方，然后求和）<ul><li>0x34A = 10 * 16^0 + 4 * 16^1 + 3 * 16^2 = 10 + 64 + 768 = 842</li></ul></li></ul></li><li>第二组（十进制转其他进制）<ul><li>十进制转二进制<ul><li>将该数不断除以2，直到商为0为止，然后将每步得到的余数倒过来，就是对应的二进制</li><li>123 = 123 / 2 = 61…1 <code>=&gt;</code> 61 / 2 = 30…1 <code>=&gt;</code> 30 / 2 = 15…0 <code>=&gt;</code> 15 / 2 = 7…1 <code>=&gt;</code> 7 / 2 = 3…1 <code>=&gt;</code> 3 / 2 = 1…1 <code>=&gt;</code> 1 / 2 = 0…1 <code>=&gt;</code> 1101111 <code>=&gt;</code> 1111011</li></ul></li><li>十进制转八进制<ul><li>将该数不断除以8，直到商为0为止，然后将每步得到的余数倒过来，就是对应的八进制<ul><li>678 = 678 / 8 = 84…6 <code>=&gt;</code> 84 / 8 = 10…4 <code>=&gt;</code> 10 / 8 = 1…2 <code>=&gt;</code> 1 / 8 = 0…1 <code>=&gt;</code> 6421 <code>=&gt;</code> (0)1246</li></ul></li></ul></li><li>十进制转十六进制<ul><li>将该数不断除以16，直到商为0为止，然后将每步得到的余数倒过来，就是对应的十六进制<ul><li>8912 = 8912 / 16 = 557…0 <code>=&gt;</code> 557 / 16 = 34…13(D) <code>=&gt;</code> 34 / 16 = 2…2 <code>=&gt;</code> 2 / 16 = 0…2 <code>=&gt;</code> 0D22 <code>=&gt;</code> (0x)22D0</li></ul></li></ul></li></ul></li><li>第三组（二进制转其他进制）<ul><li>二进制转八进制<ul><li>从低位开始，将二进制每三位数一组，转成对应的八位进制数即可<ul><li>11010101 = 11   010   101 = (0)325</li></ul></li></ul></li><li>二进制转十六进制<ul><li>从低位开始，将二进制数每四位一组，转成对应的十六进制数即可<ul><li>11010101 =  1101   0101 = (0x)D5</li></ul></li></ul></li></ul></li><li>第四组（其他进制转二进制）<ul><li>八进制转二进制<ul><li>将八进制数每一位转成对应的一个三位的二进制数即可<ul><li>0237 = 010   011   111 = 10011111</li></ul></li></ul></li><li>十六进制转二进制<ul><li>将十六进制数每一位转成对应的一个四位的二进制数即可<ul><li>0x23B =  0010   0011   1011 = 1000111011</li></ul></li></ul></li></ul></li></ul><h2 id="位运算："><a href="#位运算：" class="headerlink" title="位运算："></a>位运算：</h2><ul><li>&amp;（按位与）：两位全为1，结果为1，否则为0</li><li>|（按位或）：两位有一个为1，结果为1，否则为0</li><li>^（按位异或）：两个一个为0，一个为1，结果为1，否则为0</li><li>~（按位取反）：0 -&gt; 1，1 -&gt; 0</li><li>&gt;&gt;（二进制右移运算符）：将一个数的各二进制位全部右移若干位，正数左补0，负数左补1，右边丢弃</li><li>&lt;&lt;（二进制左移运算符）：将一个运算对象的各二进制位全部左移若干位，左边的二进制位丢弃，右边补0</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://tva4.sinaimg.cn/large/00724TQEgy1gruilygntkj30us0asqa2.jpg" alt="image-20210625145216234"></p><p><img src= "/img/loading.gif" data-lazy-src="https://tva1.sinaimg.cn/large/00724TQEgy1grxs9126ylj30hq0b7tb3.jpg" alt="image-20210628104228254"></p><h1 id="static关键字"><a href="#static关键字" class="headerlink" title="static关键字"></a>static关键字</h1><ul><li>局部变量使用static修饰<ul><li>对应静态局部变量在声明时会自动赋予初始值</li><li>静态局部变量存储在进程的静态存储区，只会被初始一次，即使函数返回，它的值也会保持不变</li></ul></li><li>全局变量使用static修饰<ul><li>普通全局变量对整个工程可见，其他文件可以使用extern外部声明后直接使用。静态全局变量仅对当前文件可见，其他文件不可访问</li></ul></li><li>函数使用static修饰<ul><li>非静态函数可以在另一个文件中通过extern引用，静态函数只能在声明它的文件中可见</li></ul></li></ul><h1 id="基本数据类型和字符串类型的相互转换"><a href="#基本数据类型和字符串类型的相互转换" class="headerlink" title="基本数据类型和字符串类型的相互转换"></a>基本数据类型和字符串类型的相互转换</h1><h2 id="基本数据类型转字符串"><a href="#基本数据类型转字符串" class="headerlink" title="基本数据类型转字符串"></a>基本数据类型转字符串</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> str1[<span class="number">20</span>]; <span class="comment">//字符数组，即字符串</span></span><br><span class="line"><span class="keyword">char</span> str2[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">char</span> str3[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> a=<span class="number">20984</span>,b=<span class="number">48090</span>;</span><br><span class="line"><span class="keyword">double</span> d=<span class="number">14.309948</span>;</span><br><span class="line"><span class="comment">//说明</span></span><br><span class="line"><span class="comment">//1. sprintf 是一个系统函数，可以将结果存放到字符串中</span></span><br><span class="line"><span class="comment">//2. 格式化的结果，会存放到 str1中</span></span><br><span class="line"><span class="built_in">sprintf</span>(str1,<span class="string">&quot;%d %d&quot;</span>,a,b);</span><br><span class="line"><span class="built_in">sprintf</span>(str2, <span class="string">&quot;%.2f&quot;</span>, d);  </span><br><span class="line"><span class="built_in">sprintf</span>(str3, <span class="string">&quot;%8.2f&quot;</span>, d); <span class="comment">//%8.2f 含义是格式化后，一共有8位，小数点后占用2位， 不够用空格占位</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;str1=%s str2=%s str3=%s&quot;</span>, str1, str2, str3);</span><br><span class="line">getchar(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字符串转基本数据类型"><a href="#字符串转基本数据类型" class="headerlink" title="字符串转基本数据类型"></a>字符串转基本数据类型</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//字符数组</span></span><br><span class="line"><span class="keyword">char</span> str[<span class="number">10</span>] = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> str2[<span class="number">10</span>] = <span class="string">&quot;12.67423&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> str3[<span class="number">3</span>] = <span class="string">&quot;ab&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> str4[<span class="number">4</span>] = <span class="string">&quot;111&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//说明</span></span><br><span class="line"><span class="comment">//1.  atoi(str) 将 str 转成整数</span></span><br><span class="line"><span class="keyword">int</span> num1 = atoi(str);</span><br><span class="line"><span class="keyword">short</span> s1 = atoi(str4);</span><br><span class="line"><span class="comment">//说明</span></span><br><span class="line"><span class="comment">//1. atof(str2); 将 str2 转成小数 </span></span><br><span class="line"><span class="keyword">double</span> d = atof(str2);</span><br><span class="line"><span class="comment">//说明</span></span><br><span class="line"><span class="comment">//1. str3[0]  表示获取到 str3这个字符串(数组)的第一个元素  &#x27;a&#x27;</span></span><br><span class="line"><span class="keyword">char</span> c = str3[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;num1=%d d=%f c=%c s1=%d&quot;</span>, num1, d, c, s1);<span class="comment">//</span></span><br><span class="line">getchar();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="预处理命令和宏定义"><a href="#预处理命令和宏定义" class="headerlink" title="预处理命令和宏定义"></a>预处理命令和宏定义</h1><h2 id="预处理命令（-if、-elif、-endif）："><a href="#预处理命令（-if、-elif、-endif）：" class="headerlink" title="预处理命令（#if、#elif、#endif）："></a>预处理命令（#if、#elif、#endif）：</h2><ul><li>使用函数库之前，应该使用#include引入对应的头文件。这种<code>以#开头的命令成为预处理命令</code></li><li>这些在编译之前对源文件进行简单加工的过程，就成为预处理</li><li>预处理主要是处理以#开头的命令，预处理命令要放在所有函数之外，而且一般都放在源文件的前面</li><li>预处理是C语言的一个重要功能，由<code>预处理程序</code>完成，当对一个源文件进行编译时，<code>系统将自动调用预处理程序对源程序中的预处理部分做处理</code>，处理完毕自动进入对源程序的编译</li><li>C语言提供了多种预处理功能，如宏定义、文件包含、条件编译等</li></ul><h2 id="宏定义："><a href="#宏定义：" class="headerlink" title="宏定义："></a>宏定义：</h2><ul><li>#define叫做宏定义命令，它也是C语言预处理命令的一种。所谓宏定义，就是用一个标识符来表示一个字符串，如果在后面的代码中出现了该标识符，那么就全部替换成指定的字符串</li><li>在预处理阶段，对程序中所有出现的“宏名”，预处理器都会用宏定义中的字符串去替换，这成为<code>“宏替换”</code>或<code>“宏展开”</code></li><li>宏定义是由源程序中的宏定义命令#define完成的，宏替换是由预处理程序完成的</li></ul><h2 id="带参数的宏定义："><a href="#带参数的宏定义：" class="headerlink" title="带参数的宏定义："></a>带参数的宏定义：</h2><ul><li>C语言允许宏带有参数。在宏定义中的参数成为“形式参数”，在宏调用中的参数称为“实际参数”</li><li>对带参数的宏，在展开过程中不仅要进行字符串替换，还要用实参去替换形参</li><li>带参宏定义的一般形式为<code>#define 宏名(形参列表) 字符串</code>，在字符串中可以含有各个形参，调用的一般形式为<code>宏名(实参列表);</code></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://tvax2.sinaimg.cn/large/00724TQEgy1grxwqu1ijwj30ce0ajjtz.jpg" alt="image-20210628131800803"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> str1[<span class="number">3</span>] = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>&#125;<span class="comment">// 当数组长度大于实际长度时，会自动在末尾添加&#x27;\0&#x27;，否则不会添加，导致乱码</span></span><br><span class="line"><span class="keyword">char</span> str2[] = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>&#125;<span class="comment">// 不会自动添加&#x27;\0&#x27;</span></span><br><span class="line"><span class="keyword">char</span> str3[] = <span class="string">&quot;ab&quot;</span>;<span class="comment">// 会自动添加&#x27;\0&#x27;</span></span><br><span class="line"><span class="keyword">char</span>* str4 = <span class="string">&quot;ab&quot;</span>;<span class="comment">// 会自动添加&#x27;\0&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="指针函数注意事项和细节"><a href="#指针函数注意事项和细节" class="headerlink" title="指针函数注意事项和细节"></a>指针函数注意事项和细节</h1><ul><li>用指针作为函数返回值时需要注意，函数运行结束后会销毁在它内部定义的所有局部数据，包括局部变量、局部数组和形式参数，函数返回的指针不能指向这些数据</li><li>函数运行结束后会销毁该函数所有的局部数据，这里所谓的销毁并不是将局部数据所占用的内存全部清零，而是程序放弃对它的使用权限，后面的代码可以使用这块内存</li><li>C语言不支持在调用函数时返回局部变量的地址，如果确实有这样的需求，需要定义局部变量为static变量</li></ul><h1 id="函数指针（指向函数的指针）"><a href="#函数指针（指向函数的指针）" class="headerlink" title="函数指针（指向函数的指针）"></a>函数指针（指向函数的指针）</h1><ul><li>一个函数总是占用一段连续的内存区域，函数名在表达式中有时也会被转换为该函数所在内存区域的首地址</li><li>把函数的这个首地址（入口地址）赋予一个指针变量，使指针变量指向函数所在的内存区域，然后通过指针变量就可以找到并调用该函数</li></ul><h2 id="函数指针定义"><a href="#函数指针定义" class="headerlink" title="函数指针定义"></a>函数指针定义</h2><p>returnType (*pointerName)(param list);</p><ul><li>returnType为函数指针指向的函数返回值类型</li><li>pointerName为指针名称</li><li>param list为函数指针指向的函数的参数列表</li><li>参数列表中可以同时给出参数的类型和名称，也可以只给出参数的类型，省略参数的名称</li><li>注意<code>()的优先级高于*</code>，第一个括号不能省略，如果写作<code>returnType *pointerName(param list);</code>就成了函数原型，它表明函数的返回值类型为<code>returnType *</code></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//说明</span></span><br><span class="line"><span class="comment">//1. max 函数</span></span><br><span class="line"><span class="comment">//2. 接收两个int ,返回较大数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;b ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x, y, maxVal;</span><br><span class="line">   </span><br><span class="line"><span class="comment">//说明 函数指针</span></span><br><span class="line"><span class="comment">//1. 函数指针的名字 pmax</span></span><br><span class="line"><span class="comment">//2. int 表示 该函数指针指向的函数是返回int 类型</span></span><br><span class="line"><span class="comment">//3. (int, int) 表示 该函数指针指向的函数形参是接收两个 int </span></span><br><span class="line"><span class="comment">//4. 在定义函数指针时，也可以写上形参名  int (*pmax)(int x, int y) = max;</span></span><br><span class="line">    <span class="keyword">int</span> (*pmax)(<span class="keyword">int</span> x, <span class="keyword">int</span> y) = max;  <span class="comment">//</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Input two numbers:&quot;</span>);</span><br><span class="line">   </span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line"><span class="comment">// (*pmax)(x, y) 通过函数指针去调用 函数max</span></span><br><span class="line"><span class="comment">// 调用方式 2 pmax(x,y)</span></span><br><span class="line">    maxVal = (*pmax)(x, y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Max value: %d pmax=%p pmax本身的地址=%p\n&quot;</span>, maxVal, pmax, &amp;pmax);</span><br><span class="line">getchar();</span><br><span class="line">getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://tvax4.sinaimg.cn/large/00724TQEgy1grz2292yhlj30hz0apq4e.jpg" alt="image-20210629130521278"></p><h2 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h2><ul><li>函数指针变量可以作为某个函数的参数来使用，回调函数就是一个通过函数指针调用的函数</li><li>回调函数是由别人的函数执行时调用你传入的函数（通过函数指针完成）</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">// 回调函数</span></span><br><span class="line"><span class="comment">//1.  int (*f)(void) </span></span><br><span class="line"><span class="comment">//2. f 就是 函数指针 , 它可以接收的函数是 (返回 int ,没有形参的函数)</span></span><br><span class="line"><span class="comment">//3. f 在这里被 initArray 调用，充当了回调函数角色</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initArray</span><span class="params">(<span class="keyword">int</span> *<span class="built_in">array</span>, <span class="keyword">int</span> arraySize, <span class="keyword">int</span> (*f)(<span class="keyword">void</span>))</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i ;</span><br><span class="line"><span class="comment">//循环10</span></span><br><span class="line">    <span class="keyword">for</span> ( i=<span class="number">0</span>; i&lt;arraySize; i++) &#123;</span><br><span class="line">        <span class="built_in">array</span>[i] = f(); <span class="comment">//通过 函数指针调用了 getNextRandomValue 函数</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 获取随机值</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getNextRandomValue</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> rand();<span class="comment">//rand 系统函数， 会返回一个随机整数</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> myarray[<span class="number">10</span>],i; <span class="comment">//定义一个数组和 int</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">//说明</span></span><br><span class="line"><span class="comment">//1. 调用 initArray 函数</span></span><br><span class="line"><span class="comment">//2. 传入了一个函数名 getNextRandomValue (地址), 需要使用函数指针接收</span></span><br><span class="line">initArray(myarray, <span class="number">10</span>, getNextRandomValue);</span><br><span class="line">   </span><br><span class="line"><span class="comment">//输出赋值后的数组</span></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, myarray[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="动态内存分配"><a href="#动态内存分配" class="headerlink" title="动态内存分配"></a>动态内存分配</h1><ul><li>全局变量——内存中的静态存储区</li><li>非静态的局部变量——内存中的动态存储区——stack 栈</li><li>临时使用的数据——建立动态内存分配区域，需要时随时开辟，不需要时及时释放——heap 堆</li><li>根据需要向系统申请所需大小的空间，由于未在声明部分定义其为变量或者数组，不能通过变量名或者数组名来引用这些数据，只能通过指针来引用</li></ul><h2 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h2><p>头文件   #include &lt;stdlib.h&gt;   声明了四个关于内存动态分配的函数</p><ol><li>函数原型<code>void *malloc(usigned int size)</code>   // memory allocation<ul><li>作用——在内存的动态存储区(堆)中分配一个长度为size的连续空间</li><li>形参size的类型为无符号整型，函数返回值是所分配区域的第一个字节的地址，即此函数是一个指针型函数，返回的指针指向该分配域的开头位置</li><li>malloc(100);   开辟一个100字节的临时空间，返回值为其第一个字节的地址</li></ul></li><li>函数原型<code>void *calloc(unsigned n,unsigned size)</code><ul><li>作用——在内存的动态存储区中分配n个长度为size的连续空间，这个空间一般比较大，足以保存一个数组</li><li>用calloc函数可以为一堆数组开辟动态存储空间，n为数组元素个数，每个元素长度为size</li><li>函数返回指向所分配域的起始位置的指针；分配不成功，返回NULL</li><li>p = calloc(50,4);   // 开辟一个50 * 4 个字节临时空间，把起始地址分配给指针变量p</li></ul></li><li>函数原型 <code>void free(void *p)</code><ul><li>作用——释放变量p所指向的动态空间，使这部分空间能重新被其他变量使用</li><li>p是最近一次调用calloc或malloc函数时的函数返回值</li><li>free函数无返回值</li><li>free(p);   // 释放p所指向的已分配的动态空间</li></ul></li><li>函数原型 <code>void *realloc(void *p,unsigned int size)</code><ul><li>作用——重新分配malloc或clloc函数获得的动态空间大小，将p指向的动态空间大小改变为size，p的值不变，分配失败返回NULL</li><li>realloc(p,50);   // 将p所指向的已分配的动态空间改为50字节</li></ul></li></ol><h2 id="返回类型说明"><a href="#返回类型说明" class="headerlink" title="返回类型说明"></a>返回类型说明</h2><p>C99标准把以上malloc，calloc，realloc函数的基类型定为void类型，这种指针成为<code>无类型指针(typeless pointer)</code>，即不指向哪一种具体的类型数据，只表示用来指向一个抽象的类型的数据，即仅提供一个纯地址，而不能指向任何具体的对象</p><h2 id="基本原则"><a href="#基本原则" class="headerlink" title="基本原则"></a>基本原则</h2><ul><li><code>避免分配大量的小内存块</code>，分配堆上的内存有一些系统开销，所以分配许多小内存块比分配几个大内存块的系统开销大</li><li>仅在需要时分配内存。只要<code>使用完堆上的内存块，就要及时释放</code>，否则可能会出现<code>内存泄漏</code></li><li>总是确保释放已分配的内存，在编写分配内存的代码时，就要确定在代码的什么地方释放内存</li><li>在释放内存前，确保不会无意中覆盖堆上已分配的内存地址，否则程序就会出现<code>内存泄漏</code></li></ul><h1 id="指针使用一览"><a href="#指针使用一览" class="headerlink" title="指针使用一览"></a>指针使用一览</h1><p><img src= "/img/loading.gif" data-lazy-src="https://tvax4.sinaimg.cn/large/00724TQEgy1gs99qtwhu1j30ho08xjuj.jpg" alt="image-20210708090854581"></p><h1 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">张老太养了两只猫猫:一只名字叫小白,今年3岁,白色。还有一只叫小花,今年100岁,花色。</span></span><br><span class="line"><span class="comment">请编写一个程序，当用户输入小猫的名字时，就显示该猫的名字，年龄，颜色。</span></span><br><span class="line"><span class="comment">如果用户输入的小猫名错误，则显示 张老太没有这只猫猫。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">分析：</span></span><br><span class="line"><span class="comment">1. 猫猫有 三个成员(变量)组成</span></span><br><span class="line"><span class="comment">2. 使用结构体解决</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//创建 结构体Cat  【是数据类型】</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Cat</span> &#123;</span> <span class="comment">// 结构体名 Cat, Cat 就是我们自己构造的一个数据类型</span></span><br><span class="line"><span class="keyword">char</span> * name;  <span class="comment">//名字，使用指针，指向一个字符串</span></span><br><span class="line"><span class="keyword">int</span> age; <span class="comment">//年龄</span></span><br><span class="line"><span class="keyword">char</span> *color; <span class="comment">//颜色</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//使用Cat 结构体，创建变量</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Cat</span> <span class="title">cat1</span>;</span> <span class="comment">// cat1 就是 struct Cat 的一个变量 </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Cat</span> <span class="title">cat2</span>;</span> <span class="comment">// cat2 就是 struct Cat 的一个变量 </span></span><br><span class="line"><span class="comment">//给cat1 的各个成员赋值</span></span><br><span class="line">cat1.name = <span class="string">&quot;小白&quot;</span>;</span><br><span class="line">cat1.age = <span class="number">3</span>;</span><br><span class="line">cat1.color = <span class="string">&quot;白色&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//给cat2 的各个成员赋值</span></span><br><span class="line">cat2.name = <span class="string">&quot;小花&quot;</span>;</span><br><span class="line">cat2.age = <span class="number">100</span>;</span><br><span class="line">cat2.color = <span class="string">&quot;花色&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出两只猫的信息</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n 第1只猫 name=%s age=%d color=%s&quot;</span>, cat1.name, cat1.age, cat1.color);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n 第2只猫 name=%s age=%d color=%s&quot;</span>, cat2.name, cat2.age, cat2.color);</span><br><span class="line"></span><br><span class="line">getchar();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="共用体"><a href="#共用体" class="headerlink" title="共用体"></a>共用体</h1><p>所有成员共用一个数据空间，该空间的大小以占用最大的成员为准</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker内运行jar包</title>
      <link href="posts/368443741/"/>
      <url>posts/368443741/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><p>创建一个自定义网络（单机项目可以不需要创建，自定义网络用于feign调用时走内网）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network create --subnet=172.18.0.0/16 docker-net(自定义网络名称)</span><br></pre></td></tr></table></figure><p>运行jar包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8108:8108 -e TZ=Asia/Shanghai \</span><br><span class="line">-v /home/jar/xxx.jar:/home/xxx.jar \</span><br><span class="line">-v /data/jar/logs:/data/logs \</span><br><span class="line">--name xxx \</span><br><span class="line">--net docker-net --ip 172.18.0.2 java:8 java -jar /home/xxx.jar</span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果未创建自定义网络，--net docker-net可以去掉</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> jar包指定的路径是docker内部路径</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker挂载nginx目录及配置</title>
      <link href="posts/3587950801/"/>
      <url>posts/3587950801/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h1 id="挂载命令："><a href="#挂载命令：" class="headerlink" title="挂载命令："></a>挂载命令：</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 80:80 -p443:443 --name nginx \</span><br><span class="line">-v /data/nginx/html:/usr/share/nginx/html \</span><br><span class="line">-v /data/nginx/logs:/var/log/nginx \</span><br><span class="line">-v /data/nginx/conf/:/etc/nginx \</span><br><span class="line">-d nginx</span><br></pre></td></tr></table></figure><h1 id="配置："><a href="#配置：" class="headerlink" title="配置："></a>配置：</h1><h2 id="代理本地端口："><a href="#代理本地端口：" class="headerlink" title="代理本地端口："></a>代理本地端口：</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 如果使用docker需要使用私网或公网ip，localhost和127.0.0.1无效</span></span><br><span class="line">location / &#123;</span><br><span class="line">    proxy_pass http://172.18.200.59:8108;</span><br><span class="line">    proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">    proxy_set_header X-Forwarded-Port $server_port;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">    proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文件配置："><a href="#文件配置：" class="headerlink" title="文件配置："></a>文件配置：</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 打开文件</span></span><br><span class="line">location /a &#123;</span><br><span class="line">root /usr/local/test;</span><br><span class="line">index test.txt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 打开文件夹</span></span><br><span class="line">location /b &#123;</span><br><span class="line">root /usr/local/test/;</span><br><span class="line">autoindex on;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载文件</span></span><br><span class="line">location /c &#123;</span><br><span class="line">root /usr/local/test/test.txt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SSL配置："><a href="#SSL配置：" class="headerlink" title="SSL配置："></a>SSL配置：</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name  www.xxx.com;</span><br><span class="line"></span><br><span class="line">    ssl on;</span><br><span class="line">    ssl_certificate      xxx.pem;</span><br><span class="line">    ssl_certificate_key  xxx.key;</span><br><span class="line"></span><br><span class="line">    ssl_session_cache    shared:SSL:1m;</span><br><span class="line">    ssl_session_timeout  5m;</span><br><span class="line"></span><br><span class="line">    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">    ssl_prefer_server_ciphers  on;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /data/xxx/;</span><br><span class="line">        index  index.html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="打包vue后刷新404："><a href="#打包vue后刷新404：" class="headerlink" title="打包vue后刷新404："></a>打包vue后刷新404：</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">root /usr/share/nginx/html;</span><br><span class="line">try_files $uri $uri/ @router;</span><br><span class="line">index index.html;</span><br><span class="line">&#125;</span><br><span class="line">location @router &#123;</span><br><span class="line">rewrite ^.*$ /index.html last;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>生成Android证书</title>
      <link href="posts/2867075872/"/>
      <url>posts/2867075872/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h1 id="前提：安装JRE环境"><a href="#前提：安装JRE环境" class="headerlink" title="前提：安装JRE环境"></a><font color="#ff0000">前提：安装JRE环境</font></h1><h2 id="生成签名证书："><a href="#生成签名证书：" class="headerlink" title="生成签名证书："></a>生成签名证书：</h2><p><font color="#ff0000">使用keytool -genkey命令生成证书：</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -genkey -alias testalias -keyalg RSA -keysize 2048 -validity 36500 -keystore test.keystore</span><br></pre></td></tr></table></figure><ul><li>testalias是证书别名，可修改为自己想设置的字符，建议使用英文字母和数字</li><li>test.keystore是证书文件名称，可修改为自己想设置的文件名称，也可以指定完整文件路径</li><li>36500是证书的有效期，表示100年有效期，单位天，建议时间设置长一点，避免证书过期</li></ul><h2 id="查看证书信息："><a href="#查看证书信息：" class="headerlink" title="查看证书信息："></a>查看证书信息：</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -list -v -keystore test.keystore  </span><br></pre></td></tr></table></figure><h3 id="输出结果："><a href="#输出结果：" class="headerlink" title="输出结果："></a>输出结果：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Keystore type: PKCS12    </span><br><span class="line">Keystore provider: SUN    </span><br><span class="line"></span><br><span class="line">Your keystore contains 1 entry    </span><br><span class="line"></span><br><span class="line">Alias name: test    </span><br><span class="line">Creation date: 2019-10-28    </span><br><span class="line">Entry type: PrivateKeyEntry    </span><br><span class="line">Certificate chain length: 1    </span><br><span class="line">Certificate[1]:    </span><br><span class="line">Owner: CN=Tester, OU=Test, O=Test, L=HD, ST=BJ, C=CN    </span><br><span class="line">Issuer: CN=Tester, OU=Test, O=Test, L=HD, ST=BJ, C=CN    </span><br><span class="line">Serial number: 7dd12840    </span><br><span class="line">Valid from: Fri Jul 26 20:52:56 CST 2019 until: Sun Jul 02 20:52:56 CST 2119    </span><br><span class="line">Certificate fingerprints:    </span><br><span class="line">         MD5:  F9:F6:C8:1F:DB:AB:50:14:7D:6F:2C:4F:CE:E6:0A:A5    </span><br><span class="line">         SHA1: BB:AC:E2:2F:97:3B:18:02:E7:D6:69:A3:7A:28:EF:D2:3F:A3:68:E7    </span><br><span class="line">         SHA256: 24:11:7D:E7:36:12:BC:FE:AF:2A:6A:24:BD:04:4F:2E:33:E5:2D:41:96:5F:50:4D:74:17:7F:4F:E2:55:EB:26    </span><br><span class="line">Signature algorithm name: SHA256withRSA    </span><br><span class="line">Subject Public Key Algorithm: 2048-bit RSA key    </span><br><span class="line">Version: 3</span><br></pre></td></tr></table></figure><ul><li>MD5<br>证书的MD5指纹信息（安全码MD5）</li><li>SHA1<br>证书的SHA1指纹信息（安全码SHA1）</li><li>SHA256<br>证书的SHA256指纹信息（安全码SHA245）</li></ul><h2 id="安卓签名获取工具"><a href="#安卓签名获取工具" class="headerlink" title="安卓签名获取工具"></a>安卓签名获取工具</h2><p>直接通过一个apk，获取安装到手机的第三方应用签名的apk包。 详情：<a href="https://developers.weixin.qq.com/doc/oplatform/Downloads/Android_Resource.html">https://developers.weixin.qq.com/doc/oplatform/Downloads/Android_Resource.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>spring-retry重试机制</title>
      <link href="posts/3118246143/"/>
      <url>posts/3118246143/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h1 id="pom-xml添加jar包"><a href="#pom-xml添加jar包" class="headerlink" title="pom.xml添加jar包"></a>pom.xml添加jar包</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.retry<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-retry<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="启动类或配置类添加-EnableRetry注解"><a href="#启动类或配置类添加-EnableRetry注解" class="headerlink" title="启动类或配置类添加@EnableRetry注解"></a>启动类或配置类添加<font color="#ff0000">@EnableRetry</font>注解</h1><h1 id="需要重试的方法上添加-Retryable注解（需要使用注入的方式调用该方法）"><a href="#需要重试的方法上添加-Retryable注解（需要使用注入的方式调用该方法）" class="headerlink" title="需要重试的方法上添加@Retryable注解（需要使用注入的方式调用该方法）"></a>需要重试的方法上添加<font color="#ff0000">@Retryable</font>注解（需要使用注入的方式调用该方法）</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Retryable(recover = &quot;testRecover&quot;, backoff = @Backoff(value = 3000L, multiplier = 1))</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(Integer userId)</span> </span>&#123;</span><br><span class="line">    log.info(<span class="string">&quot;测试spring-retry,Retryable&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>被<code>@Retryable</code>注解的方法会在发生异常时进行重试</p><p><code>@Retryable</code>注解部分参数说明：</p><table><thead><tr><th>注解参数</th><th>作用</th></tr></thead><tbody><tr><td>@Backoff</td><td>重试补偿机制</td></tr><tr><td>recover</td><td>指定达到最大重试次数依然失败后所调用的方法</td></tr><tr><td>value</td><td>与include同义</td></tr><tr><td>include</td><td>可重试的异常类型，默认为空（如果exclude也是空的，则重试所有异常）</td></tr><tr><td>exclude</td><td>不可重试的异常类型，默认为空（如果include也是空的，则重试所有异常）</td></tr><tr><td>maxAttempts</td><td>最大重试次数（包含第一次失败），默认为3</td></tr></tbody></table><p><code>@Backoff</code>注解部分参数说明：</p><table><thead><tr><th>注解参数</th><th>作用</th></tr></thead><tbody><tr><td>delay</td><td>重试间隔时间，默认1000L（毫秒）</td></tr><tr><td>value</td><td>与delay同义</td></tr><tr><td>maxDelay</td><td>两次重试之间的最大间隔时间</td></tr><tr><td>multiplier</td><td>重试间隔时间倍数，默认0</td></tr></tbody></table><p>在指定方法上标记<code>@Recover</code>来开启重试失败后调用的方法</p><p>当重试次数达到<code>multiplier</code>指定次数时，会触发该方法</p><p><font color="#ff0000">注：<code>@Recover</code>和<code>@Retryable</code>方法的入参和返回值必须一致</font></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Recover</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">testRecover</span><span class="params">(Exception e, Integer userId)</span> </span>&#123;</span><br><span class="line">    log.info(<span class="string">&quot;测试spring-retry,Recover&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://github.com/spring-projects/spring-retry">github地址</a></p><p><a href="https://docs.spring.io/spring-retry/docs/">文档地址</a>（文档目前最新版本为：1.2.2.RELEASE）</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写给新软件工程师的一封信</title>
      <link href="posts/2992963015/"/>
      <url>posts/2992963015/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><blockquote><h2 id="A-letter-to-myself-as-a-fresh-software-engineer"><a href="#A-letter-to-myself-as-a-fresh-software-engineer" class="headerlink" title="A letter to myself as a fresh software engineer"></a>A letter to myself as a fresh software engineer</h2></blockquote><p>Dear Self,</p><p>You just graduated and you are ready to start your career in the IT field. I cannot spoiler anything, but I assure you it will be an interesting ride. I’m writing you this letter because I want to give you some advice that will help you be a better professional. Nothing you won’t learn by yourself in the next few years, but it is something that I wish someone had told me when I started my career. They are not ordered by any means and are all equally important.<br><img src= "/img/loading.gif" data-lazy-src="https://tva1.sinaimg.cn/large/00724TQEgy1gqec6zvq3mj32bc1hr4ol.jpg" alt="Test"></p><p>Run a marathon, not a sprint.<br>The road to becoming a good software engineer is a long one. Don’t rush on stuff, and don’t give up just because you are not getting an easy and fast win. Take your time to learn and become good in the topics you are interested in. Remember that this is a marathon, not a sprint.</p><p>Be humble, not stupid.<br>It is good — sorry, it is fundamental — to be humble. There is always something to learn from others, even when you are an experienced professional. But this doesn’t mean that everyone is better than you. You have to respect yourself and your skills. When you don’t respect yourself you become stupid, not humble.</p><p>Compare with yourself, not others.<br>There is no point in comparing yourself with others. There will always be someone better than you in your job. And there will always be someone better than the one that is better than you. And there will… ok, you got the point. Just do your best. If you think someone is a better engineer than you are, learn from him/her. Keep doing your best, and eventually, you will be a reference for someone else.</p><p>Respect people, not titles.<br>During your career, you will work with exceptional professional. Most important, you will meet exceptional human beings. Respect people for who they are, not for the title they have. If foo is “Principal Senior Lead Engineering Chief Architect” doesn’t mean that he deserves more respect than bar that is a junior software developer.</p><p>Choose the challenge, not comfort.<br>The road will be full of crossroads. There may be multiple choices, but everything boils down to a choice between your comfort zone, or go outside your comfort zone. There may be a moment in your life — hopefully after decades of work — when you will feel the need to cool down a bit because you will be satisfied with what you achieved. Until that moment, try to go out of your comfort zone. It will make you a better professional and you will feel more satisfied with your career. Remember that the best things often happen outside the comfort zone.</p><p>Jump on the whiteboard, not on the keyboard.<br>When you have to design a new feature or a new system, don’t jump on the keyboard to start coding. The “muscle” you have to train and use as an engineer is your brain, not your fingers. Always think before act. For this reason, jump on the whiteboard instead of the keyboard, and start thinking of what you should implement. Better if you have a sparring partner to challenge your thoughts. Oh, when I say “the whiteboard” I mean “every object that can help you think”, be it pen and paper, a notebook application, draw.io, etc.</p><p>Deliver value, not code.<br>Please don’t be affected by the NIH syndrome. There is no point in reinventing the wheel. Avoid wasting time in something that is already out there. If you can achieve your goal simply glueing together some tools, just do it. What you should deliver as a software engineer is value to your business, not lines of code.</p><p>Choose life, not work.<br>In the IT field, it is easy to focus too much on work. After all, for most of us, it is not just a job, it is passion. Remember that work is important, but life is more. Live a meaningful and rich life. Play sports, read books, find hobbies, travel and see the beautiful world we are living in. Hangout with friends, find a partner for your life and give to your partner all the love, attention, and support that you can. You’ll be surprised how much having a rich life will improve you as a professional.</p><p>That’s all I can tell you right now. I still have a lot to learn.</p><p>One last thing: enjoy the ride!</p><p>With love,</p><p>(a more experienced) You.</p><p>—</p><p><a href="https://www.florio.dev/20200328-letter-to-myself/">原作者</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP安装openssl模块在wordpress中发送邮件</title>
      <link href="posts/619199573/"/>
      <url>posts/619199573/</url>
      
        <content type="html"><![CDATA[ <meta name="referrer" content="no-referrer" /><h1 id="下载WP-Mail-STMP插件并配置信息"><a href="#下载WP-Mail-STMP插件并配置信息" class="headerlink" title="下载WP Mail STMP插件并配置信息"></a>下载WP Mail STMP插件并配置信息</h1><p><img src= "/img/loading.gif" data-lazy-src="https://wx4.sinaimg.cn/large/00724TQEgy1gn4ldjebssj30mz0ett92.jpg"><strong><font color="#ff0000">STMP密码填写授权码，参考：<a href="https://service.mail.qq.com/cgi-bin/help?subtype=1&&id=28&&no=1001256">https://service.mail.qq.com/cgi-bin/help?subtype=1&amp;&amp;id=28&amp;&amp;no=1001256</a></font></strong></p><h1 id="发送测试邮件失败"><a href="#发送测试邮件失败" class="headerlink" title="发送测试邮件失败"></a>发送测试邮件失败</h1><p><img src= "/img/loading.gif" data-lazy-src="https://wx4.sinaimg.cn/large/00724TQEgy1gn4lejpafaj30sg0csteo.jpg"><font color="#ff0000"><strong>这里只是说明连接不上STMP，并没有说明是什么原因造成连接不上，所以模仿发送邮件流程，进行测试</strong></font></p><h1 id="失败原因为缺少”openssl”"><a href="#失败原因为缺少”openssl”" class="headerlink" title="失败原因为缺少”openssl”"></a>失败原因为缺少”openssl”</h1><p><img src= "/img/loading.gif" data-lazy-src="https://wx1.sinaimg.cn/large/00724TQEgy1gn4lf7vnx3j30f6082aab.jpg"></p><h3 id="安装”openssl”"><a href="#安装”openssl”" class="headerlink" title="安装”openssl”"></a><strong>安装”openssl”</strong></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">yum install openssl </span><br><span class="line">yum install openssl-devel</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编译php扩展</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> /usr/<span class="built_in">local</span>/php为php安装位置</span></span><br><span class="line">/usr/local/php/bin/phpize</span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行后，发现错误 无法找到config.m4 ，config0.m4就是config.m4，复制一份即可</span></span><br><span class="line">cp /usr/local/php/ext/openssl/config0.m4 /usr/local/php/ext/openssl/config.m4</span><br><span class="line"><span class="meta">#</span><span class="bash"> 再次出错：Cannot find autoconf. Please check your autoconf installation and the <span class="variable">$PHP_AUTOCONF</span> environment variable. Then, rerun this script</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装autoconf模块再编译即可</span></span><br><span class="line">yum install autoconf</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置并安装openssl</span></span><br><span class="line">./configure --with-openssl --with-php-config=/usr/local/php/bin/php-config</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行完成后最后一行会提示生成的openssl.so文件目录位置：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Installing shared extensions: /usr/<span class="built_in">local</span>/php/lib/php/extensions/no-debug-zts-20160303/</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改php.ini</span></span><br><span class="line">vim /usr/local/php/bin/php.ini</span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加这句：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> extension=/usr/<span class="built_in">local</span>/php/lib/php/extensions/no-debug-zts-20160303/openssl.so</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动php-fpm</span></span><br><span class="line">./php-fpm</span><br><span class="line"><span class="meta">#</span><span class="bash"> 依然报错缺少openssl，最后发现虽然php.ini配置完成了，但是启动时并没有用上，所以指定配置文件启动</span></span><br><span class="line">./php-fpm -c /usr/local/php/bin/php.ini</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> wordpress </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vue脚手架搭建项目</title>
      <link href="posts/1451956170/"/>
      <url>posts/1451956170/</url>
      
        <content type="html"><![CDATA[<p>vue init webpack <font color="#ff0000">demo</font>（项目名小写）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Project name # 项目名：默认为上一步&quot;webpack demo&quot;中的demo</span><br><span class="line"></span><br><span class="line">Project description # 项目介绍：默认 A Vue.js project</span><br><span class="line"></span><br><span class="line">Author # 作者名</span><br><span class="line"></span><br><span class="line">Vue build（Use arrow keys）</span><br><span class="line">　Runtime + Compiler：recommended for most users # 运行加编译</span><br><span class="line">　Runtime-only：about 6KB lighter min+gzip，but templaters（or any Vue-spcific HTML）are ONLY allowed in .Vue files - render functions are required elsewhere # 仅运行</span><br><span class="line"></span><br><span class="line">Install vue-router ? （Y/n） # 安装Vue路由</span><br><span class="line"></span><br><span class="line">Use ESLint to lint your code ? （Y/n） # 使用ESlint对代码进行校验</span><br><span class="line"></span><br><span class="line">Pick an ESLint preset (Use arrow keys) # 选择ESLint预设，编写vue项目时的代码风格</span><br><span class="line">　Standard (https://github.com/standard/standard)　# Standard</span><br><span class="line">　Airbnb (https://github.com/airbnb/javascript) # Airbnb</span><br><span class="line">　none (configure it yourself) # 自己配置</span><br><span class="line"></span><br><span class="line">Set up unit tests （Y/n） # 使用单元测试</span><br><span class="line"></span><br><span class="line">Setup e2e tests with Nightwatch？ （Y/n） # 使用e2e测试</span><br><span class="line"></span><br><span class="line">Should we run npm install fr you after the project has been created?（recommended）（Use arrow keys）</span><br><span class="line">　Yes，use Npm # 使用npm</span><br><span class="line">　Yes，use Yarn # 使用yarn</span><br><span class="line">　No，I whill handle that myself # 自己配置</span><br></pre></td></tr></table></figure><p>cd demo</p><p>npm install</p><p>安装element-ui，可选</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install element-ui -S</span><br></pre></td></tr></table></figure><p>安装scss，可选</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装node-sass</span></span><br><span class="line">npm install node-sass --save-dev</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装sass-loader</span></span><br><span class="line">npm install sass-loader --save-dev</span><br><span class="line"><span class="meta">#</span><span class="bash"> 在build/webpack.base.conf.js文件中的rules模块中添加：</span></span><br><span class="line">&#123;</span><br><span class="line">　test: /\.scss$/,</span><br><span class="line">　loaders: [&#x27;style&#x27;, &#x27;css&#x27;, &#x27;sass&#x27;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>安装scss后启动报错：<br><font color="#ff0000">Node Sass version 5.0.0 is incompatible with ^4.0.0.</font><br>解决：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 卸载原sass</span></span><br><span class="line">npm uninstall node-sass</span><br><span class="line"><span class="meta">#</span><span class="bash"> 重新安装 4.X.X 版本的sass</span></span><br><span class="line">npm install node-sass@4.14.1</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>jmeter address already in use</title>
      <link href="posts/2408300312/"/>
      <url>posts/2408300312/</url>
      
        <content type="html"><![CDATA[<p><font color="#ff0000">原因：windows本身提供的端口访问机制问题<br>windows提供给TCP/IP链接的端口为1024-5000，并且要四分钟来循环回收他们。就导致在短时间内跑大量请求将端口占满。</font></p><p>解决：</p><ol><li>cmd中，用regedit打开注册表</li><li>在HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters下：<ol><li>右击parameters，添加一个新的DWORD，名字为MaxUserPort</li><li>然后双击MaxUserPort，输入数值数据为65534，基数选择十进制如果是分布式运行的话，控制机器和负载机器都需要这样操作哦）</li><li>修改配置完毕之后记得重启机器才会生效</li></ol></li></ol><p><font color="#ff0000">tips：另一个 TCPTimedWaitDelay 注册表参数确定关闭的端口等待多长时间才能重用关闭的端口。</font></p><p>windows官方链接：<a href="https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/networking/connect-tcp-greater-than-5000-error-wsaenobufs-10055">https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/networking/connect-tcp-greater-than-5000-error-wsaenobufs-10055</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git使用指定的账号克隆仓库</title>
      <link href="posts/2846882250/"/>
      <url>posts/2846882250/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b dev https://username:password@gitee.com/仓库地址</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Error response from daemon service endpoint with name xxx already exists.</title>
      <link href="posts/710246348/"/>
      <url>posts/710246348/</url>
      
        <content type="html"><![CDATA[<p><font color="#ff0000">原因：容器被删除，网络仍在占用</font></p><p>解决：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 删除容器</span></span><br><span class="line">docker rm -f 容器ID</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看容器的网络占用情况</span></span><br><span class="line">docker network inspect 网络模式（例：bridge）</span><br><span class="line"><span class="meta">#</span><span class="bash"> 清理此容器的网络占用</span></span><br><span class="line">docker network disconnect --force 网络模式（例：bridge） 容器名称（例：mysql）</span><br><span class="line"><span class="meta">#</span><span class="bash"> 检查是否还有同名容器占用</span></span><br><span class="line">docker network inspect 网络模式</span><br><span class="line"><span class="meta">#</span><span class="bash"> 重新构建容器</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>el-date-picker设置默认日期</title>
      <link href="posts/3812763588/"/>
      <url>posts/3812763588/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// js变量</span></span><br><span class="line"><span class="attr">start_date</span>: [<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">Date</span>.now()), <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">Date</span>.now())]</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-date-picker</span></span></span><br><span class="line"><span class="tag">　<span class="attr">v-model</span>=<span class="string">&quot;defaultDate&quot;</span></span></span><br><span class="line"><span class="tag">　<span class="attr">type</span>=<span class="string">&quot;daterange&quot;</span></span></span><br><span class="line"><span class="tag">　<span class="attr">align</span>=<span class="string">&quot;right&quot;</span></span></span><br><span class="line"><span class="tag">　<span class="attr">unlink-panels</span></span></span><br><span class="line"><span class="tag">　<span class="attr">range-separator</span>=<span class="string">&quot;--&quot;</span></span></span><br><span class="line"><span class="tag">　<span class="attr">start-placeholder</span>=<span class="string">&quot;开始日期&quot;</span></span></span><br><span class="line"><span class="tag">　<span class="attr">end-placeholder</span>=<span class="string">&quot;结束日期&quot;</span></span></span><br><span class="line"><span class="tag">　<span class="attr">:picker-options</span>=<span class="string">&quot;pickerOptions&quot;</span></span></span><br><span class="line"><span class="tag">　<span class="attr">format</span>=<span class="string">&quot;yyyy-MM-dd&quot;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 把yyyy/MM/dd转为yyyy-MM-dd</span></span><br><span class="line">start_date[<span class="number">1</span>].toLocaleDateString().replace(<span class="regexp">/\//g</span>, <span class="string">&#x27;-&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> element-ui </category>
          
      </categories>
      
      
        <tags>
            
            <tag> element-ui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>el-table使用sort-method进行排序</title>
      <link href="posts/1600405551/"/>
      <url>posts/1600405551/</url>
      
        <content type="html"><![CDATA[<h1 id="由于sort-method在Table-column-Attributes中，所以应使用-sort-method而不是-sort-method，且必须添加sortable属性"><a href="#由于sort-method在Table-column-Attributes中，所以应使用-sort-method而不是-sort-method，且必须添加sortable属性" class="headerlink" title="由于sort-method在Table-column Attributes中，所以应使用:sort-method而不是@sort-method，且必须添加sortable属性"></a>由于sort-method在Table-column Attributes中，所以应使用<font color="#ff0000">:sort-method</font>而不是@sort-method，且必须添加<font color="#ff0000">sortable</font>属性</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">sortable</span> <span class="attr">label</span>=<span class="string">&quot;客单价(元)&quot;</span> <span class="attr">:sort-method</span>=<span class="string">&quot;sortByPrice&quot;</span> <span class="attr">min-width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">　<span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">　　<span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;scope.row.collection_amount!==0&quot;</span>&gt;</span>&#123;&#123; (scope.row.collection_amount/scope.row.collection_num)/100 &#x27; moneyFilter &#125;&#125;　 </span><br><span class="line">　　<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">　　<span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>&gt;</span>0.00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">　<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="判断大小并返回"><a href="#判断大小并返回" class="headerlink" title="判断大小并返回"></a>判断大小并返回</h1><p><font color="#ff0000">踩坑：返回值应为数值，而不是boolean</font></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据客单价排序</span></span><br><span class="line"><span class="function"><span class="title">sortByPrice</span>(<span class="params">row, row1</span>)</span> &#123;</span><br><span class="line">　<span class="keyword">if</span> (row.collection_amount === <span class="number">0</span>) &#123;</span><br><span class="line">　　<span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">　&#125;</span><br><span class="line">　<span class="keyword">if</span> ((row.collection_amount / row.collection_num) &lt; (row1.collection_amount / row1.collection_num)) &#123;</span><br><span class="line">　　<span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">　&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">　　<span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">　&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> element-ui </category>
          
      </categories>
      
      
        <tags>
            
            <tag> element-ui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring boot使用p6spy打印sql语句</title>
      <link href="posts/1296037854/"/>
      <url>posts/1296037854/</url>
      
        <content type="html"><![CDATA[<h1 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;     </span><br><span class="line">　&lt;groupId&gt;p6spy&lt;/groupId&gt;     </span><br><span class="line">　&lt;artifactId&gt;p6spy&lt;/artifactId&gt;     </span><br><span class="line">　&lt;version&gt;<span class="number">3.8</span><span class="number">.0</span>&lt;/version&gt; </span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h1 id="修改mysql数据库连接"><a href="#修改mysql数据库连接" class="headerlink" title="修改mysql数据库连接"></a>修改mysql数据库连接</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span>   </span><br><span class="line">　<span class="attr">datasource:</span>     </span><br><span class="line">　　<span class="attr">driver-class-name:</span> <span class="string">com.p6spy.engine.spy.P6SpyDriver</span>     </span><br><span class="line">　　<span class="attr">url:</span> <span class="string">jdbc:p6spy:mysql://xx.xx.xx.xx:3306</span></span><br></pre></td></tr></table></figure><h1 id="添加spy-properties配置文件"><a href="#添加spy-properties配置文件" class="headerlink" title="添加spy.properties配置文件"></a>添加<font color="#ff0000">spy.properties</font>配置文件</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#3.2.1以上使用</span></span><br><span class="line"><span class="string">modulelist=com.baomidou.mybatisplus.extension.p6spy.MybatisPlusLogFactory,com.p6spy.engine.outage.P6OutageFactory</span></span><br><span class="line"><span class="comment">#3.2.1以下使用或者不配置</span></span><br><span class="line"><span class="comment">#modulelist=com.p6spy.engine.logging.P6LogFactory,com.p6spy.engine.outage.P6OutageFactory</span></span><br><span class="line"><span class="comment"># 自定义日志打印</span></span><br><span class="line"><span class="string">logMessageFormat=com.baomidou.mybatisplus.extension.p6spy.P6SpyLogger</span></span><br><span class="line"><span class="comment">#日志输出到控制台</span></span><br><span class="line"><span class="string">appender=com.baomidou.mybatisplus.extension.p6spy.StdoutLogger</span></span><br><span class="line"><span class="comment"># 使用日志系统记录 sql</span></span><br><span class="line"><span class="comment">#appender=com.p6spy.engine.spy.appender.Slf4JLogger</span></span><br><span class="line"><span class="comment"># 设置 p6spy driver 代理</span></span><br><span class="line"><span class="string">deregisterdrivers=true</span></span><br><span class="line"><span class="comment"># 取消JDBC URL前缀</span></span><br><span class="line"><span class="string">useprefix=true</span></span><br><span class="line"><span class="comment"># 配置记录 Log 例外,可去掉的结果集有error,info,batch,debug,statement,commit,rollback,result,resultset.</span></span><br><span class="line"><span class="string">excludecategories=info,debug,result,commit,resultset</span></span><br><span class="line"><span class="comment"># 日期格式</span></span><br><span class="line"><span class="string">dateformat=yyyy-MM-dd</span> <span class="string">HH:mm:ss</span></span><br><span class="line"><span class="comment"># 实际驱动可多个</span></span><br><span class="line"><span class="comment">#driverlist=org.h2.Driver</span></span><br><span class="line"><span class="comment"># 是否开启慢SQL记录</span></span><br><span class="line"><span class="string">outagedetection=true</span></span><br><span class="line"><span class="comment"># 慢SQL记录标准 2 秒</span></span><br><span class="line"><span class="string">outagedetectioninterval=2</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> spring boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-admin-template打包部署及跳过登录验证</title>
      <link href="posts/1908717661/"/>
      <url>posts/1908717661/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h1 id="修改vue-config-js"><a href="#修改vue-config-js" class="headerlink" title="修改vue.config.js"></a>修改vue.config.js</h1><p><img src= "/img/loading.gif" data-lazy-src="https://wx4.sinaimg.cn/large/00724TQEgy1gn4nm3pr2yj30eu08sjrp.jpg"><br><font color="#ff0000"><strong>将publicPath的值改为’./‘(设置打包后的静态资源为相对路径,避免加载不到css、js导致页面白屏)</strong><br><strong>outputDir：打包后的文件夹名</strong></font><strong><font color="#ff0000"><br>assetsDir：打包后的静态资源文件夹名</font></strong></p><h1 id="三个文件中的VUE-APP-BASE-API改为自己的请求地址"><a href="#三个文件中的VUE-APP-BASE-API改为自己的请求地址" class="headerlink" title="三个文件中的VUE_APP_BASE_API改为自己的请求地址"></a>三个文件中的<font color="#ff0000">VUE_APP_BASE_API</font>改为自己的请求地址</h1><p><img src= "/img/loading.gif" data-lazy-src="https://wx1.sinaimg.cn/large/00724TQEgy1gn4nmw56m1j30l3098wet.jpg"></p><h1 id="修改登录请求接口"><a href="#修改登录请求接口" class="headerlink" title="修改登录请求接口"></a>修改登录请求接口</h1><p><img src= "/img/loading.gif" data-lazy-src="https://wx3.sinaimg.cn/large/00724TQEgy1gn4nng5mvoj30jt0ekt9q.jpg"></p><h1 id="注释掉src-main-js中此段代码"><a href="#注释掉src-main-js中此段代码" class="headerlink" title="注释掉src/main.js中此段代码"></a>注释掉<font color="#ff0000">src/main.js</font>中此段代码</h1><p><img src= "/img/loading.gif" data-lazy-src="https://wx4.sinaimg.cn/large/00724TQEgy1gn4nnzxf4hj30gm08f0t0.jpg"><br><span style="color:#ff0000">不使用mock数据，使用自己的接口数据</span></p><h1 id="修改util-request-js中的code判断，改为自己后端返回的code"><a href="#修改util-request-js中的code判断，改为自己后端返回的code" class="headerlink" title="修改util/request.js中的code判断，改为自己后端返回的code"></a>修改<font color="#ff0000">util/request.js</font>中的code判断，改为自己后端返回的code</h1><p><img src= "/img/loading.gif" data-lazy-src="https://wx1.sinaimg.cn/large/00724TQEgy1gn4nol5glsj30gv0a4t95.jpg"></p><h1 id="如需跳过登录直接进入dashboard页面，将-src-permission-js中的hasToken直接赋值为true即可-即if判断为true"><a href="#如需跳过登录直接进入dashboard页面，将-src-permission-js中的hasToken直接赋值为true即可-即if判断为true" class="headerlink" title="如需跳过登录直接进入dashboard页面，将/src/permission.js中的hasToken直接赋值为true即可(即if判断为true)"></a>如需跳过登录直接进入dashboard页面，将<font color="#ff0000">/src/permission.js</font><strong>中的</strong><font color="#ff0000">hasToken</font>直接赋值为<font color="#ff0000">true</font>即可(即if判断为true)</h1><p><img src= "/img/loading.gif" data-lazy-src="https://wx1.sinaimg.cn/large/00724TQEgy1gn4np3q6d2j30gb0aiaaj.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> element-ui </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java把base64转图片保存</title>
      <link href="posts/1256897339/"/>
      <url>posts/1256897339/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">Long shopId = productVo.getShopId();</span><br><span class="line">String imageName = shopId + <span class="string">&quot;/&quot;</span> + IdUtil.simpleUUID() + <span class="string">&quot;.png&quot;</span>;</span><br><span class="line">File file = <span class="keyword">new</span> File(LOCAL_URL);</span><br><span class="line">OutputStream outputStream = <span class="keyword">null</span>;</span><br><span class="line">BASE64Decoder decoder = <span class="keyword">new</span> BASE64Decoder();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">file.mkdirs();</span><br><span class="line">&#125;</span><br><span class="line">file = <span class="keyword">new</span> File(LOCAL_URL + imageName);</span><br><span class="line">String baseStr = productVo.getPicUrl();</span><br><span class="line"><span class="comment">// 前台在用Ajax传base64值的时候会把base64中的+换成空格，所以需要替换回来。</span></span><br><span class="line">String baseValue = baseStr.replaceAll(<span class="string">&quot; &quot;</span>, <span class="string">&quot;+&quot;</span>);</span><br><span class="line"><span class="comment">// 解密</span></span><br><span class="line"><span class="keyword">byte</span>[] b = decoder.decodeBuffer(baseValue.replace(<span class="string">&quot;data:image/jpeg;base64,&quot;</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line"><span class="comment">// 处理数据</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b.length; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (b[i] &lt; <span class="number">0</span>) &#123;</span><br><span class="line">b[i] += <span class="number">256</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">outputStream = <span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line">outputStream.write(b);</span><br><span class="line">outputStream.flush();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">outputStream.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">product.setPicUrl(REMOTE_URL + imageName);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> base64 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>application/x-www-form-urlencoded请求参数格式</title>
      <link href="posts/2242584043/"/>
      <url>posts/2242584043/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> params = <span class="keyword">new</span> URLSearchParams()  </span><br><span class="line">params.append(<span class="string">&#x27;start_date&#x27;</span>, <span class="built_in">this</span>.listQuery.start_date)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>jar中没有主清单属性</title>
      <link href="posts/2929262520/"/>
      <url>posts/2929262520/</url>
      
        <content type="html"><![CDATA[<h2 id="pom-xml添加插件："><a href="#pom-xml添加插件：" class="headerlink" title="pom.xml添加插件："></a>pom.xml添加插件：</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;build&gt;</span></span><br><span class="line">　<span class="string">&lt;!--自定义打包文件名--&gt;</span></span><br><span class="line">　<span class="string">&lt;finalName&gt;dinService&lt;/finalName&gt;</span></span><br><span class="line">　　<span class="string">&lt;plugins&gt;</span></span><br><span class="line">　　　<span class="string">&lt;plugin&gt;</span></span><br><span class="line">　　　　<span class="string">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span><br><span class="line">　　　　<span class="string">&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span></span><br><span class="line">　　　　<span class="string">&lt;configuration&gt;</span></span><br><span class="line">　　　　　<span class="string">&lt;fork&gt;true&lt;/fork&gt;</span></span><br><span class="line">　　　　　<span class="string">&lt;!--</span> <span class="string">如果没有该配置，devtools不会生效</span> <span class="string">--&gt;</span></span><br><span class="line">　　　　　<span class="string">&lt;!--</span> <span class="string">指定该Main</span> <span class="string">Class为全局的唯一入口</span> <span class="string">--&gt;</span></span><br><span class="line">　　　　　<span class="string">&lt;mainClass&gt;cool.kunkun.service.ServiceApplication&lt;/mainClass&gt;</span></span><br><span class="line">　　　　　<span class="string">&lt;layout&gt;ZIP&lt;/layout&gt;</span></span><br><span class="line">　　　　<span class="string">&lt;/configuration&gt;</span></span><br><span class="line">　　　　<span class="string">&lt;executions&gt;</span></span><br><span class="line">　　　　　<span class="string">&lt;execution&gt;</span></span><br><span class="line">　　　　　　<span class="string">&lt;goals&gt;</span></span><br><span class="line">　　　　　　　<span class="string">&lt;goal&gt;repackage&lt;/goal&gt;&lt;!--</span> <span class="string">可以把依赖的包都打包到生成的Jar包中</span> <span class="string">--&gt;</span></span><br><span class="line">　　　　　　<span class="string">&lt;/goals&gt;</span></span><br><span class="line">　　　　　<span class="string">&lt;/execution&gt;</span></span><br><span class="line">　　　　<span class="string">&lt;/executions&gt;</span></span><br><span class="line">　　　<span class="string">&lt;/plugin&gt;</span></span><br><span class="line">　　<span class="string">&lt;/plugins&gt;</span></span><br><span class="line"><span class="string">&lt;/build&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>git指定sshkey访问远程仓库</title>
      <link href="posts/undefined/"/>
      <url>posts/undefined/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h3 id="在-ssh-目录下新建config文件，添加内容："><a href="#在-ssh-目录下新建config文件，添加内容：" class="headerlink" title="在_/.ssh_目录下新建config文件，添加内容："></a><strong>在_/.ssh_目录下新建config文件，添加内容：</strong></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 远程仓库地址</span></span><br><span class="line">Host <span class="string">&quot;dev.wizarpos.com&quot;</span></span><br><span class="line"><span class="comment"># 提供给git使用</span></span><br><span class="line">User <span class="string">&quot;git&quot;</span></span><br><span class="line"><span class="comment"># 私钥文件路径</span></span><br><span class="line">IdentityFile <span class="string">&quot;C:/Users/demo/.ssh/id_rsa_wizarpos&quot;</span></span><br><span class="line"><span class="comment"># 远程端口</span></span><br><span class="line">port 30022</span><br><span class="line"><span class="comment"># 为true代表使用此配置</span></span><br><span class="line">IdentitiesOnly yes</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://tva1.sinaimg.cn/large/00724TQEgy1gqe7xh1bk1j30cl07175z.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vue-element-template登录流程</title>
      <link href="posts/1374621978/"/>
      <url>posts/1374621978/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h1 id="src-view-login-index-vue"><a href="#src-view-login-index-vue" class="headerlink" title="src/view/login/index.vue"></a>src/view/login/index.vue</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">handleLogin</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">　<span class="built_in">this</span>.$refs.loginForm.validate(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span><br><span class="line">　　<span class="keyword">if</span> (valid) &#123;</span><br><span class="line">　　　<span class="built_in">this</span>.loading = <span class="literal">true</span></span><br><span class="line">　　　<span class="built_in">this</span>.$store.dispatch(<span class="string">&#x27;user/login&#x27;</span>, <span class="built_in">this</span>.loginForm).then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">　　　　　<span class="built_in">this</span>.$router.push(&#123; <span class="attr">path</span>: <span class="built_in">this</span>.redirect <span class="string">&#x27;&#x27;</span> <span class="string">&#x27;/&#x27;</span> &#125;)</span><br><span class="line">　　　　　<span class="built_in">this</span>.loading = <span class="literal">false</span></span><br><span class="line">　　　　&#125;).catch(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">　　　　　<span class="built_in">this</span>.loading = <span class="literal">false</span></span><br><span class="line">　　　　&#125;)</span><br><span class="line">　　&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">　　　<span class="built_in">console</span>.log(<span class="string">&#x27;error submit!!&#x27;</span>)</span><br><span class="line">　　　<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">　　&#125;</span><br><span class="line">　&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="this-store-dispatch-‘user-login’-this-loginForm-—-gt-src-store-modules-user-js"><a href="#this-store-dispatch-‘user-login’-this-loginForm-—-gt-src-store-modules-user-js" class="headerlink" title="this.$store.dispatch(‘user/login’, this.loginForm)　—&gt;　src/store/modules/user.js"></a>this.$store.dispatch(‘user/login’, this.loginForm)　—&gt;　src/store/modules/user.js</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Login, logout, getUserInfo &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/user&#x27;</span></span><br><span class="line"><span class="function"><span class="title">login</span>(<span class="params">&#123; commit &#125;, userInfo</span>)</span> &#123;</span><br><span class="line">　<span class="keyword">const</span> &#123; username, password &#125; = userInfo</span><br><span class="line">　<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">　　login(&#123; <span class="attr">username</span>: username.trim(), <span class="attr">password</span>: password &#125;).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">　　　<span class="keyword">const</span> &#123; data &#125; = response</span><br><span class="line">　　　commit(<span class="string">&#x27;SET_TOKEN&#x27;</span>, data.token)</span><br><span class="line">　　　setToken(data.token)</span><br><span class="line">　　　resolve()</span><br><span class="line">　　&#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">　　　reject(error)</span><br><span class="line">　　&#125;)</span><br><span class="line">　&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="import-Login-logout-getUserInfo-from-‘-api-user’-—-gt-src-api-user-js"><a href="#import-Login-logout-getUserInfo-from-‘-api-user’-—-gt-src-api-user-js" class="headerlink" title="import { Login, logout, getUserInfo } from ‘@/api/user’　—&gt;　src/api/user.js"></a>import { Login, logout, getUserInfo } from ‘@/api/user’　—&gt;　src/api/user.js</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">　<span class="keyword">return</span> request(&#123;</span><br><span class="line">　　<span class="attr">url</span>: <span class="string">&#x27;/user/login&#x27;</span>,</span><br><span class="line">　　<span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">　　data</span><br><span class="line">　&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="src-utils-request-js"><a href="#src-utils-request-js" class="headerlink" title="src/utils/request.js"></a>src/utils/request.js</h1><h3 id="注意：if-res-code-20000-code需改为后端返回的值"><a href="#注意：if-res-code-20000-code需改为后端返回的值" class="headerlink" title="注意：if (res.code !== 20000)　code需改为后端返回的值"></a>注意：<font color="#ff0000">if (res.code !== 20000)</font>　code需改为后端返回的值</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">response =&gt; &#123; </span><br><span class="line">　<span class="keyword">const</span> res = response.data </span><br><span class="line"><span class="comment">// if the custom code is not 20000, it is judged as an error. </span></span><br><span class="line">　　<span class="keyword">if</span> (res.code !== <span class="number">20000</span>) &#123;   </span><br><span class="line">　　　Message(&#123;     </span><br><span class="line">　　　　<span class="attr">message</span>: res.message <span class="string">&#x27;&#x27;</span> <span class="string">&#x27;Error&#x27;</span>,     </span><br><span class="line">　　　　<span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>,     </span><br><span class="line">　　　　<span class="attr">duration</span>: <span class="number">5</span> * <span class="number">1000</span>   </span><br><span class="line">　　　&#125;)   </span><br><span class="line">　　　<span class="comment">// 50008: Illegal token; 50012: Other clients logged in; 50014: Token expired;  </span></span><br><span class="line">　　　<span class="keyword">if</span> (res.code === <span class="number">50008</span> <span class="string">&#x27;&#x27;</span> res.code === <span class="number">50012</span> <span class="string">&#x27;&#x27;</span> res.code === <span class="number">50014</span>) &#123;     </span><br><span class="line">　　　　<span class="comment">// to re-login     </span></span><br><span class="line">　　　　MessageBox.confirm(<span class="string">&#x27;You have been logged out, you can cancel to stay on this page, or log in again&#x27;</span>, <span class="string">&#x27;Confirm logout&#x27;</span>, &#123;       </span><br><span class="line">　　　　　<span class="attr">confirmButtonText</span>: <span class="string">&#x27;Re-Login&#x27;</span>,       </span><br><span class="line">　　　　　<span class="attr">cancelButtonText</span>: <span class="string">&#x27;Cancel&#x27;</span>,       </span><br><span class="line">　　　　　<span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>     </span><br><span class="line">　　　　&#125;).then(<span class="function">() =&gt;</span> &#123;       </span><br><span class="line">　　　　　store.dispatch(<span class="string">&#x27;user/resetToken&#x27;</span>).then(<span class="function">() =&gt;</span> &#123;         </span><br><span class="line">　　　　　　location.reload()       </span><br><span class="line">　　　　　&#125;)     </span><br><span class="line">　　　　&#125;)   </span><br><span class="line">　　　&#125;   </span><br><span class="line">　　　<span class="keyword">return</span> <span class="built_in">Promise</span>.reject(<span class="keyword">new</span> <span class="built_in">Error</span>(res.message <span class="string">&#x27;&#x27;</span> <span class="string">&#x27;Error&#x27;</span>)) </span><br><span class="line">　　&#125; <span class="keyword">else</span> &#123;   </span><br><span class="line">　　　<span class="keyword">return</span> res </span><br><span class="line">　　&#125; </span><br><span class="line">　&#125;, </span><br><span class="line">　<span class="function"><span class="params">error</span> =&gt;</span> &#123; </span><br><span class="line">　<span class="built_in">console</span>.log(<span class="string">&#x27;err&#x27;</span> + error) <span class="comment">// for debug </span></span><br><span class="line">　Message(&#123; <span class="attr">message</span>: error.message, </span><br><span class="line">　　<span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>, </span><br><span class="line">　　<span class="attr">duration</span>: <span class="number">5</span> * <span class="number">1000</span> </span><br><span class="line">　&#125;) </span><br><span class="line">　<span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> element-ui </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>int转String位数不够前面补零</title>
      <link href="posts/421069899/"/>
      <url>posts/421069899/</url>
      
        <content type="html"><![CDATA[<p><strong><font color="#ff0000">String.format(“%09d”, 25);</font></strong><br>0代表前面要补的字符<br>9代表字符串长度<br>d表示参数为整数类型<br>运行结果为：000000025</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用Hutool生成验证码</title>
      <link href="posts/693567828/"/>
      <url>posts/693567828/</url>
      
        <content type="html"><![CDATA[<h2 id="jar包引入"><a href="#jar包引入" class="headerlink" title="jar包引入"></a>jar包引入</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    　&lt;groupId&gt;cn.hutool&lt;/groupId&gt;</span><br><span class="line">    　&lt;artifactId&gt;hutool-captcha&lt;/artifactId&gt;</span><br><span class="line">    　&lt;version&gt;<span class="number">5.2</span><span class="number">.1</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Api(value = &quot;测试controller&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CaptchaController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StringRedisTemplate redisTemplate;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">　   * 验证码图片存储路径前缀</span></span><br><span class="line"><span class="comment"> 　  **/</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String PREFIX = <span class="string">&quot;E:/&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">　   * 验证码图片存储路径后缀</span></span><br><span class="line"><span class="comment"> 　  **/</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SUFFIX = <span class="string">&quot;.png&quot;</span>;</span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;captcha&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">captcha</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String path;</span><br><span class="line">        CircleCaptcha captcha;</span><br><span class="line">        <span class="comment">// 先生成一个验证码，判断是否存在，如果存在，则重新生成</span></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="comment">//定义图形验证码的长、宽、验证码字符数、干扰元素个数</span></span><br><span class="line">            captcha = CaptchaUtil.createCircleCaptcha(<span class="number">200</span>, <span class="number">100</span>, <span class="number">4</span>, <span class="number">50</span>);</span><br><span class="line">            <span class="comment">//CircleCaptcha captcha = new CircleCaptcha(200, 100, 4, 20);</span></span><br><span class="line">            <span class="comment">//验证码的值</span></span><br><span class="line">            String code = captcha.getCode();</span><br><span class="line">            <span class="comment">//该图片可以在登录完成后删除掉，避免占用资源（取消登陆时也应删除）</span></span><br><span class="line">            path = PREFIX + code + SUFFIX;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">new</span> File(path).exists());</span><br><span class="line">        <span class="comment">//图形验证码写出</span></span><br><span class="line">        captcha.write(path);</span><br><span class="line">        <span class="comment">//把验证码存入到redis中</span></span><br><span class="line">        redisTemplate.opsForValue().set(<span class="string">&quot;1&quot;</span>, captcha.getCode());</span><br><span class="line">        <span class="comment">//当后端代码和验证码图片在同一台服务器上时，可直接返回</span></span><br><span class="line">        <span class="comment">//否则，上传图片到服务器，返回服务器地址</span></span><br><span class="line">        <span class="keyword">return</span> path;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;login&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;登录判断&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">login</span><span class="params">(String username, String password, String code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!check(code)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (username.equals(<span class="string">&quot;admin&quot;</span>) &amp;&amp; password.equals(<span class="string">&quot;admin&quot;</span>)) &#123;</span><br><span class="line">            <span class="comment">//业务逻辑代码...</span></span><br><span class="line">            delFile(PREFIX + code + SUFFIX);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">　   * 检查验证码是否正确</span></span><br><span class="line"><span class="comment">　   *</span></span><br><span class="line"><span class="comment">　   * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">　   * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">　   * <span class="doctag">@author</span> shmily</span></span><br><span class="line"><span class="comment">　   * <span class="doctag">@since</span> 2020/7/6 16:52</span></span><br><span class="line"><span class="comment"> 　  **/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">check</span><span class="params">(String code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (redisTemplate.opsForValue().get(<span class="string">&quot;1&quot;</span>).equalsIgnoreCase(code)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> 　  * 删除验证码文件</span></span><br><span class="line"><span class="comment"> 　  *</span></span><br><span class="line"><span class="comment"> 　  * <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment"> 　  * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment"> 　  * <span class="doctag">@author</span> shmily</span></span><br><span class="line"><span class="comment"> 　  * <span class="doctag">@since</span> 2020/7/6 16:52</span></span><br><span class="line"><span class="comment"> 　  **/</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Boolean <span class="title">delFile</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(path);</span><br><span class="line">        <span class="keyword">return</span> file.delete();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>小程序页面间传递对象</title>
      <link href="posts/443277130/"/>
      <url>posts/443277130/</url>
      
        <content type="html"><![CDATA[<h2 id="例如：A跳转到B，需传递selectedGoods对象"><a href="#例如：A跳转到B，需传递selectedGoods对象" class="headerlink" title="例如：A跳转到B，需传递selectedGoods对象"></a>例如：A跳转到B，需传递selectedGoods对象</h2><h4 id="A页面："><a href="#A页面：" class="headerlink" title="A页面："></a><strong>A页面：</strong></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uni.navigateTo(&#123;</span><br><span class="line">　<span class="attr">url</span>:<span class="string">&#x27;/pages/index/settle?selectedGoods=&#x27;</span>+<span class="built_in">encodeURIComponent</span>(<span class="built_in">JSON</span>.stringify(<span class="built_in">this</span>.selectedGoods))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="B页面："><a href="#B页面：" class="headerlink" title="B页面："></a><strong>B页面：</strong></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">onLoad</span>(<span class="params">data</span>)</span> &#123;</span><br><span class="line">　<span class="built_in">console</span>.log(<span class="built_in">JSON</span>.parse(<span class="built_in">decodeURIComponent</span>(data.selectedGoods)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 微信小程序 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>wordpress可视化环境下输入空格</title>
      <link href="posts/395619666/"/>
      <url>posts/395619666/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h1 id="右击右下角中英文切换，选择设置选项"><a href="#右击右下角中英文切换，选择设置选项" class="headerlink" title="右击右下角中英文切换，选择设置选项"></a>右击右下角中英文切换，选择设置选项</h1><h1 id="选择按键选项"><a href="#选择按键选项" class="headerlink" title="选择按键选项"></a>选择按键选项</h1><p><img src= "/img/loading.gif" data-lazy-src="https://tva4.sinaimg.cn/large/00724TQEgy1gqdhe45unej30m80hkjsj.jpg"></p><h1 id="打开全-半角切换功能，切换到全角之后再按空格即可"><a href="#打开全-半角切换功能，切换到全角之后再按空格即可" class="headerlink" title="打开全/半角切换功能，切换到全角之后再按空格即可"></a>打开全/半角切换功能，切换到全角之后再按空格即可</h1><p><img src= "/img/loading.gif" data-lazy-src="https://tva3.sinaimg.cn/large/00724TQEgy1gqdheagysdj30m80hkgml.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> wordpress </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>el-date-picker禁用某个日期之前的时间</title>
      <link href="posts/1302172676/"/>
      <url>posts/1302172676/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-date-picker</span></span></span><br><span class="line"><span class="tag">　<span class="attr">v-model</span>=<span class="string">&quot;show.endTime&quot;</span></span></span><br><span class="line"><span class="tag">　<span class="attr">type</span>=<span class="string">&quot;date&quot;</span></span></span><br><span class="line"><span class="tag">　<span class="attr">:placeholder</span>=<span class="string">&quot;$t(&#x27;time.endTime&#x27;)&quot;</span></span></span><br><span class="line"><span class="tag">　<span class="attr">value-format</span>=<span class="string">&quot;yyyy-MM-dd&quot;</span></span></span><br><span class="line"><span class="tag">　<span class="attr">:picker-options</span>=<span class="string">&quot;pickerOptions&quot;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">　<span class="attr">pickerOptions</span>: &#123;</span><br><span class="line">　　<span class="attr">disabledDate</span>: <span class="function">(<span class="params">time</span>) =&gt;</span> &#123;</span><br><span class="line">　　　<span class="keyword">return</span> time.getTime() &lt; <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">this</span>.startTime).getTime() + <span class="number">8.64e7</span></span><br><span class="line">　　&#125;</span><br><span class="line">　&#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="#ff0000">ps：return&nbsp;time.getTime()&nbsp;&lt;&nbsp;new&nbsp;Date(this.startTime).getTime()&nbsp;+&nbsp;8.64e7</font> 代表只能选择this.startTime之后的时间，并且this.startTime这天不能选择 (8.64e7：科学计数法，代表8.64×10的7次方)</p>]]></content>
      
      
      <categories>
          
          <category> element-ui </category>
          
      </categories>
      
      
        <tags>
            
            <tag> element-ui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>el-input无法输入</title>
      <link href="posts/3501428516/"/>
      <url>posts/3501428516/</url>
      
        <content type="html"><![CDATA[<h1 id="添加-input-事件"><a href="#添加-input-事件" class="headerlink" title="添加_@input_事件"></a>添加_@input_事件</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;show.points&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:160px;&quot;</span> @<span class="attr">input</span>=<span class="string">&quot;change($event)&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h1 id="监听输入事件，在输入时强制刷新"><a href="#监听输入事件，在输入时强制刷新" class="headerlink" title="监听输入事件，在输入时强制刷新"></a>监听输入事件，在输入时强制刷新</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">change</span>(<span class="params">e</span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.$forceUpdate()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> element-ui </category>
          
      </categories>
      
      
        <tags>
            
            <tag> element-ui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于LNMP搭建wordpress博客系统</title>
      <link href="posts/3665250559/"/>
      <url>posts/3665250559/</url>
      
        <content type="html"><![CDATA[<h2 id="总体依赖安装："><a href="#总体依赖安装：" class="headerlink" title="总体依赖安装："></a>总体依赖安装：</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install <span class="literal">-y</span> pcre pcre<span class="literal">-devel</span> zlib zlib<span class="literal">-devel</span> openssl openssl<span class="literal">-devel</span> gcc gcc<span class="literal">-c</span>++ zlib zlib<span class="literal">-devel</span> openssl openssl<span class="literal">-devel</span> pcre pcre<span class="literal">-devel</span> libaio<span class="literal">-devel</span> libxml2 libxml2<span class="literal">-devel</span> openssl openssl<span class="literal">-devel</span> <span class="built_in">curl</span><span class="literal">-devel</span> libjpeg<span class="literal">-devel</span> libpng<span class="literal">-devel</span> freetype<span class="literal">-devel</span> libmcrypt<span class="literal">-devel</span> libzip<span class="literal">-devel</span> pcre<span class="literal">-devel</span></span><br></pre></td></tr></table></figure><h1 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入/usr/<span class="built_in">local</span>目录并下载nginx安装包</span></span><br><span class="line">cd /usr/local</span><br><span class="line">wget http://nginx.org/download/nginx-1.12.1.tar.gz</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压、修改文件名并进入nginx目录</span></span><br><span class="line">tar -zxvf nginx-1.12.1.tar.gz</span><br><span class="line">mv nginx-1.12.1 nginx</span><br><span class="line">cd nginx</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置</span></span><br><span class="line">./configure --with-http_ssl_module --prefix=/usr/local/nginx</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装并编译</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建软连接并启动</span></span><br><span class="line">ln -s /usr/local/nginx/sbin/nginx</span><br><span class="line">./nginx</span><br></pre></td></tr></table></figure><h1 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载mysql安装包</span></span><br><span class="line">wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.26-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压</span></span><br><span class="line">tar -xvf mysql-5.7.26-linux-glibc2.12-x86_64.tar</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重命名</span></span><br><span class="line">mv mysql-5.7.26-linux-glibc2.12-x86_64 /usr/local/mysql</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加用户组mysql和用户mysql,并将其添加到mysql用户组中</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> useradd -r参数表示mysql用户是系统用户，不可用于登录系统</span> </span><br><span class="line"><span class="meta">#</span><span class="bash"> useradd -g参数表示把mysql用户添加到mysql用户组中</span></span><br><span class="line">groupadd mysql</span><br><span class="line">useradd -r -g mysql mysql</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建数据目录并赋予权限</span></span><br><span class="line">mkdir -p /data/mysql</span><br><span class="line">chown mysql:mysql -R /data/mysql</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置my.cnf</span></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将内容修改为：</span></span><br><span class="line">[mysqld]</span><br><span class="line">bind-address=0.0.0.0</span><br><span class="line">port=3306</span><br><span class="line">user=mysql</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/data/mysql</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">[mysqld_safe]</span><br><span class="line">user=mysql</span><br><span class="line">log-error=/data/mysql/mysql.err</span><br><span class="line">pid-file=/data/mysql/mysql.pid</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入mysql的bin目录并初始化（需记住输出日志末尾的密码）</span></span><br><span class="line">cd /usr/local/mysql/bin/</span><br><span class="line">./mysqld --defaults-file=/etc/my.cnf --basedir=/usr/local/mysql/ --datadir=/data/mysql/ --user=mysql --initialize</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将mysql.server放置到/etc/init.d/mysql中</span></span><br><span class="line">cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysql</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动mysql服务</span></span><br><span class="line">service mysql start</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入mysql（密码为初始化时生成的临时密码）</span></span><br><span class="line">mysql -u root -p 临时密码</span><br></pre></td></tr></table></figure><p>如运行报错：<font color="#ff0000">Access denied for user ‘root’@’localhost’</font>：<br>修改_/etc/my.cnf：[mysqld]中添加 skip-grant-tables 即可（此命令为跳过权限验证）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 修改密码</span></span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;password&#x27; PASSWORD EXPIRE NEVER;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建用户并添加权限提供给远程连接使用</span></span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;password&#x27; WITH GRANT OPTION;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 刷新权限</span></span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h1 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载PHP安装包</span></span><br><span class="line">wget https://www.php.net/distributions/php-7.3.3.tar.gz</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压重命名并进入php目录</span></span><br><span class="line">tar -zxzf php-7.3.3.tar.gz</span><br><span class="line">mv php-7.3.3 php</span><br><span class="line">cd php-7.3.3</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置</span></span><br><span class="line">./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc --with-config-file-scan-dir=/usr/local/php/etc/php.d --with-mcrypt=/usr/include --enable-mysqlnd --with-mysqli --with-pdo-mysql --enable-fpm --with-fpm-user=nginx --with-fpm-group=nginx --with-gd --with-iconv --with-zlib --enable-xml --enable-shmop --enable-sysvsem --with-curl</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编译并安装</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 复制配置文件并修改文件名</span></span><br><span class="line">cp php.ini-production /usr/local/php/bin/php.ini</span><br><span class="line">cd /usr/loacl/php/etc/</span><br><span class="line">cp php-fpm.conf.default php-fpm.conf</span><br><span class="line">cd /usr/local/php/etc/php-fpm.d</span><br><span class="line">cp www.conf.default www.conf</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改用户和用户组</span></span><br><span class="line">vim /usr/local/php/etc/php-fpm.d/www.conf</span><br><span class="line">user = 当前用户</span><br><span class="line">group = 当前用户组</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置nginx，使其支持php</span></span><br><span class="line">location ~ .php$ &#123;</span><br><span class="line">root html;</span><br><span class="line">fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">fastcgi_index index.php;</span><br><span class="line">fastcgi_param SCRIPT_FILENAME /$document_root$fastcgi_script_name;</span><br><span class="line">include fastcgi_params;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建软连接并启动</span></span><br><span class="line">ln -s /usr/local/php/sbin/php-fpm</span><br><span class="line">./php-fpm</span><br></pre></td></tr></table></figure><h1 id="安装wordpress"><a href="#安装wordpress" class="headerlink" title="安装wordpress"></a>安装wordpress</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载wordpress</span></span><br><span class="line">wget https://cn.wordpress.org/wordpress-5.4-zh_CN.tar.gz</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压并复制wordpress到nginx根目录下</span></span><br><span class="line">tar -zxvf wordpress-4.8.1-zh_CN.tar.gz</span><br><span class="line">cp -R wordpress /nginx/html</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 复制配置文件</span></span><br><span class="line">cd nginx/html/wordpress/</span><br><span class="line">cp wp-config-sample.php wp-config.php</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改配置文件</span></span><br><span class="line">vim wp-config.php</span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置数据库信息：</span></span><br><span class="line">/** WordPress数据库的名称 */</span><br><span class="line">define(&#x27;DB_NAME&#x27;, &#x27;wpdb&#x27;);</span><br><span class="line">/** MySQL数据库用户名 */</span><br><span class="line">define(&#x27;DB_USER&#x27;, &#x27;wpadmin&#x27;);</span><br><span class="line">/** MySQL数据库密码 */</span><br><span class="line">define(&#x27;DB_PASSWORD&#x27;, &#x27;pass&#x27;);</span><br><span class="line">/** MySQL主机 */</span><br><span class="line">define(&#x27;DB_HOST&#x27;, &#x27;localhost&#x27;);</span><br><span class="line">/** 创建数据表时默认的文字编码 */</span><br><span class="line">define(&#x27;DB_CHARSET&#x27;, &#x27;utf8&#x27;);</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入mysql并创建wordpress数据库及用户</span></span><br><span class="line">mysql -u root -p</span><br><span class="line">create database wpdb character set utf8;</span><br><span class="line">grant all privileges on wpdb.* to &#x27;wpadmin&#x27;@&#x27;localhost&#x27; identified by &#x27;pass&#x27;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h2 id="打开浏览器完成wordpress配置：xxx-xxx-xxx-xxx-wordpress-wp-admin-install-php，输入网站名称、管理帐号、密码、邮箱"><a href="#打开浏览器完成wordpress配置：xxx-xxx-xxx-xxx-wordpress-wp-admin-install-php，输入网站名称、管理帐号、密码、邮箱" class="headerlink" title="打开浏览器完成wordpress配置：xxx.xxx.xxx.xxx/wordpress/wp-admin/install.php，输入网站名称、管理帐号、密码、邮箱"></a>打开浏览器完成wordpress配置：xxx.xxx.xxx.xxx/wordpress/wp-admin/install.php，输入网站名称、管理帐号、密码、邮箱</h2><p>安装报错：<font color="#ff0000">无法建立目录wp-content/uploads/2020/04。有没有上级目录的写权限？</font><br>设置wordpress目录下wp-content的权限即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 -R /usr/local/nginx/html/wordpress/wp-content/</span><br></pre></td></tr></table></figure><h4 id="安装插件需要ftp服务解决方法："><a href="#安装插件需要ftp服务解决方法：" class="headerlink" title="安装插件需要ftp服务解决方法："></a>安装插件需要ftp服务解决方法：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> wordpress安装目录 ==&gt; wp-config.php,文件末尾添加以下代码：</span></span><br><span class="line">vim /usr/local/nginx/html/wordpress/wp-config.php</span><br><span class="line"></span><br><span class="line">define(&quot;FS_METHOD&quot;,&quot;direct&quot;); </span><br><span class="line">define(&quot;FS_CHMOD_DIR&quot;, 0777); </span><br><span class="line">define(&quot;FS_CHMOD_FILE&quot;, 0777);</span><br></pre></td></tr></table></figure><p><font color="#ff0000">Tips：如想去掉xx.xx.xx.xx/wordpress的wordpress：</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 复制wordpress目录下的index.php到nginx/html目录下，</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改nginx/html/index.php：</span></span><br><span class="line">require DIR . &#x27;/wp-blog-header.php&#x27;;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 改为</span></span><br><span class="line">require DIR . &#x27;/wordpress/wp-blog-header.php&#x27;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> wordpress </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> mysql </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下RabbitMQ安装及配置</title>
      <link href="posts/1589426423/"/>
      <url>posts/1589426423/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><div id="article_content" class="article_content clearfix">            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-211130ba7a.css">            <br/>           <div>本文转自：<a href="https://blog.csdn.net/zhm3023/article/details/82217222">https://blog.csdn.net/zhm3023/article/details/82217222</a></div>                       <br/>           <div/>                            <div class="htmledit_views" id="content_views">                                            <p>rabbitMQ是一个在AMQP协议标准基础上完整的，可服用的企业消息系统。它遵循Mozilla Public License开源协议，采用 Erlang 实现的工业级的消息队列(MQ)服务器，Rabbit MQ 是建立在Erlang OTP平台上。</p><p>1、安装Erlang</p><p>下载地址：<a href="https://www.erlang.org/downloads" rel="nofollow">https://www.erlang.org/downloads</a>，本文选择<a href="http://erlang.org/download/otp_win64_21.0.1.exe" rel="nofollow">OTP 21.0.1 Windows 64-bit Binary File&nbsp;</a>(91707927)</p><p>设置环境变量，新建ERLANG_HOME</p><p><img alt="" class="has" height="134" src= "/img/loading.gif" data-lazy-src="https://img-blog.csdn.net/2018083010261937?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pobTMwMjM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="350"></p><p>修改环境变量path，增加Erlang变量至path，%ERLANG_HOME%\bin;</p><p>打开cmd命令框，输入erl</p><p><img alt="" class="has" height="184" src= "/img/loading.gif" data-lazy-src="https://img-blog.csdn.net/20180830102843667?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pobTMwMjM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="489"></p><p>至此，Erlang 安装完成</p><p>2、安装rabbitmq</p><p>下载地址：<a href="http://www.rabbitmq.com/download.html" rel="nofollow">http://www.rabbitmq.com/download.html</a></p><p>exe安装地址：<a href="http://www.rabbitmq.com/install-windows.html" rel="nofollow">http://www.rabbitmq.com/install-windows.html</a></p><p>解压缩安装地址：<a href="http://www.rabbitmq.com/install-windows-manual.html" rel="nofollow">http://www.rabbitmq.com/install-windows-manual.html</a></p><p>本文选择解压缩安装<a href="https://dl.bintray.com/rabbitmq/all/rabbitmq-server/3.7.7/rabbitmq-server-windows-3.7.7.zip" rel="nofollow">rabbitmq-server-windows-3.7.7.zip</a></p><p>将<a href="https://dl.bintray.com/rabbitmq/all/rabbitmq-server/3.7.7/rabbitmq-server-windows-3.7.7.zip" rel="nofollow">rabbitmq-server-windows-3.7.7.zip</a>解压缩至D:\Program Files目录下</p><p>设置环境变量，新建RABBITMQ_SERVER</p><p><img alt="" class="has" height="139" src= "/img/loading.gif" data-lazy-src="https://img-blog.csdn.net/20180830103603987?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pobTMwMjM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="350"></p><p>修改环境变量path，增加rabbitmq变量至path，%RABBITMQ_SERVER%\sbin;</p><p>打开cmd命令框，切换至D:\Program Files\rabbitmq_server-3.7.7\sbin目录下，输入rabbitmqctl status</p><p><img alt="" class="has" height="602" src= "/img/loading.gif" data-lazy-src="https://img-blog.csdn.net/20180830103803858?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pobTMwMjM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="664"></p><p>说明rabbmitmq未启动，继续下面操作。</p><p>安装插件，命令：rabbitmq-plugins.bat enable rabbitmq_management,出现：</p><p><img alt="" class="has" height="231" src= "/img/loading.gif" data-lazy-src="https://img-blog.csdn.net/20180830104340321?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pobTMwMjM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="669"></p><p>解决方法：&nbsp;<br>将 C:\Users\Administrator\.erlang.cookie 同步至C:\Windows\System32\config\systemprofile\.erlang.cookie&nbsp;</p><p>同时删除：C:\Users\Administrator\AppData\Roaming\RabbitMQ目录</p><p>输入命令：rabbitmq-plugins.bat enable rabbitmq_management ，出现下面信息表示插件安装成功：</p><p><img alt="" class="has" height="332" src= "/img/loading.gif" data-lazy-src="https://img-blog.csdn.net/20180830104802723?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pobTMwMjM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="676"></p><p>输入命令：rabbitmq-server.bat</p><p><img alt="" class="has" height="293" src= "/img/loading.gif" data-lazy-src="https://img-blog.csdn.net/20180830105821133?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pobTMwMjM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="673"></p><p>rabbitmq启动成功，浏览器中<a href="http://localhost:15672" rel="nofollow">http://localhost:15672</a>，</p><p><img alt="" class="has" height="475" src= "/img/loading.gif" data-lazy-src="https://img-blog.csdn.net/20180830104928623?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pobTMwMjM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="962"></p><p>输入guest,guest进入rabbitMQ管理控制台：</p><p><img alt="" class="has" height="794" src= "/img/loading.gif" data-lazy-src="https://img-blog.csdn.net/20180830105034225?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pobTMwMjM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="1200"></p><p>打开cmd，再次输入命令：rabbitmqctl status</p><p><img alt="" class="has" height="1010" src= "/img/loading.gif" data-lazy-src="https://img-blog.csdn.net/20180830105147926?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pobTMwMjM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="664"></p><p>至此，rabbitMQ安装部署完成。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>idea方法注释模板</title>
      <link href="posts/3159180473/"/>
      <url>posts/3159180473/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><p><font color="#ff0000">File–&gt;Settings–&gt;Editor–&gt;Live Templates</font><br><img src= "/img/loading.gif" data-lazy-src="https://tvax1.sinaimg.cn/large/00724TQEgy1gqdgvm388zj30yp0jzq54.jpg" alt="在这里插入图片描述"><br><font color="#ff0000">新建组名</font><br><img src= "/img/loading.gif" data-lazy-src="https://tvax3.sinaimg.cn/large/00724TQEgy1gqdgvyow1oj30ag041mx1.jpg" alt="在这里插入图片描述"><br><font color="#ff0000">设置模板内容</font><img src= "/img/loading.gif" data-lazy-src="https://tva3.sinaimg.cn/large/00724TQEgy1gqdgw6w0ccj30yp0jz76v.jpg" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">* </span><br><span class="line">* TODO</span><br><span class="line">* </span><br><span class="line">* @param $param$</span><br><span class="line">* @<span class="built_in">return</span> $<span class="built_in">return</span>$</span><br><span class="line">* @author $USER$</span><br><span class="line">* @since $DATE$ $TIME$</span><br><span class="line">**/</span><br></pre></td></tr></table></figure><p><font color="#ff0000">设置模板的应用场景</font><br><img src= "/img/loading.gif" data-lazy-src="https://tvax3.sinaimg.cn/large/00724TQEgy1gqdgweg1ozj30yp0jzn0g.jpg" alt="在这里插入图片描述"><br><font color="#ff0000">设置参数的获取方式</font><br><img src= "/img/loading.gif" data-lazy-src="https://tva1.sinaimg.cn/large/00724TQEgy1gqdgwjre9dj307t053mx2.jpg" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-lazy-src="https://tva3.sinaimg.cn/large/00724TQEgy1gqdgwsqhnjj30fd07k3yy.jpg" alt="在这里插入图片描述"><br><font color="#ff0000">使用这种方法生成的注释参数类型为：</font><br><img src= "/img/loading.gif" data-lazy-src="https://tvax3.sinaimg.cn/large/00724TQEgy1gqdgx30jx3j307s057jrd.jpg" alt="在这里插入图片描述"><br><font color="#ff0000">如果想去除中括号，修改：</font><br><img src= "/img/loading.gif" data-lazy-src="https://tvax3.sinaimg.cn/large/00724TQEgy1gqdgx8ydusj30ff07m3yz.jpg" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">groovyScript(<span class="string">&quot;def result=&#x27;&#x27;; def params=\&quot;<span class="variable">$&#123;_1&#125;</span>\&quot;.replaceAll(&#x27;[\\\\[|\\\\]|\\\\s]&#x27;, &#x27;&#x27;).split(&#x27;,&#x27;).toList(); for(i = 0; i &lt; params.size(); i++) &#123;</span></span><br><span class="line"><span class="string">if(i!=params.size()-1) result+= params[i]+&#x27;,&#x27;;</span></span><br><span class="line"><span class="string">else&#123;result+= params[i];return result;&#125;</span></span><br><span class="line"><span class="string">&#125;; return result&quot;</span>, methodParameters())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA常用插件</title>
      <link href="posts/3162798155/"/>
      <url>posts/3162798155/</url>
      
        <content type="html"><![CDATA[<p>lombok<br>free mybatis plugin<br>codeGlance 迷你缩放图<br>Alibaba Java Coding Guidelines 阿里巴巴的编码规约检查插件<br>Alibaba Cloud Toolkit 快速部署到服务器<br>Json Parser json串格式化工具<br>RESTfultoolkit 根据url 查找controller 快捷键：Ctrl \ or Ctrl Alt N</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSR303数据校验</title>
      <link href="posts/293136133/"/>
      <url>posts/293136133/</url>
      
        <content type="html"><![CDATA[<h3 id="导入hibernate-validator包"><a href="#导入hibernate-validator包" class="headerlink" title="导入hibernate-validator包"></a><font color="#ff0000">导入hibernate-validator包</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.hibernate&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;<span class="number">5.2</span><span class="number">.2</span>.Final&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h1 id="普通校验"><a href="#普通校验" class="headerlink" title="普通校验"></a>普通校验</h1><h2 id="给Bean添加校验注解：javax-validation-constraints，并定义自己的message提示"><a href="#给Bean添加校验注解：javax-validation-constraints，并定义自己的message提示" class="headerlink" title="给Bean添加校验注解：javax.validation.constraints，并定义自己的message提示"></a>给Bean添加校验注解：<span class="has-inline-color has-vivid-red-color">javax.validation.constraints</span>，并定义自己的message提示</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line"><span class="meta">@NotBlank(message = &quot;品牌名必须提交&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br></pre></td></tr></table></figure><h2 id="在controller开启校验功能-Valid"><a href="#在controller开启校验功能-Valid" class="headerlink" title="在controller开启校验功能@Valid"></a>在controller开启校验功能@Valid</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">save</span><span class="params">(<span class="meta">@Valid</span> <span class="meta">@RequestBody</span> BrandEntity brand)</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="给校验的bean后紧跟一个BindingResult，就可以获取到校验的结果"><a href="#给校验的bean后紧跟一个BindingResult，就可以获取到校验的结果" class="headerlink" title="给校验的bean后紧跟一个BindingResult，就可以获取到校验的结果"></a>给校验的bean后紧跟一个BindingResult，就可以获取到校验的结果</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">save</span><span class="params">(<span class="meta">@Valid</span> <span class="meta">@RequestBody</span> BrandEntity brand, BindingResult result)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (result.hasErrors()) &#123;</span><br><span class="line">Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"><span class="comment">// 获取校验的错误结果</span></span><br><span class="line">result.getFieldErrors().forEach((item) -&gt; &#123;</span><br><span class="line"><span class="comment">// FieldError 获取到错误提示</span></span><br><span class="line">String message = item.getDefaultMessage();</span><br><span class="line"><span class="comment">// 获取错误的属性的名字</span></span><br><span class="line">String field = item.getField();</span><br><span class="line">map.put(field, message);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> R.error(<span class="number">400</span>, <span class="string">&quot;提交的数据不合法&quot;</span>).put(<span class="string">&quot;data&quot;</span>, map);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">brandService.save(brand);</span><br><span class="line"><span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="分组校验"><a href="#分组校验" class="headerlink" title="分组校验"></a>分组校验</h1><h2 id="创建分组校验接口"><a href="#创建分组校验接口" class="headerlink" title="创建分组校验接口"></a>创建分组校验接口</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AddGroup</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="给Bean添加校验注解，给校验注解标注什么情况需要进行校验"><a href="#给Bean添加校验注解，给校验注解标注什么情况需要进行校验" class="headerlink" title="给Bean添加校验注解，给校验注解标注什么情况需要进行校验"></a>给Bean添加校验注解，给校验注解标注什么情况需要进行校验</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line"><span class="meta">@NotBlank(message = &quot;品牌名必须提交&quot;,groups = &#123;AddGroup.class&#125;)</span></span><br></pre></td></tr></table></figure><h2 id="controller中-Valid修改为-Validated，并标注注解根据哪种分组进行验证"><a href="#controller中-Valid修改为-Validated，并标注注解根据哪种分组进行验证" class="headerlink" title="controller中@Valid修改为@Validated，并标注注解根据哪种分组进行验证"></a>controller中@Valid修改为@Validated，并标注注解根据哪种分组进行验证</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">save</span><span class="params">(<span class="meta">@Validated(&#123;AddGroup.class&#125;)</span> <span class="meta">@RequestBody</span> BrandEntity brand)</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><p><font color="#ff0000">注：默认没有指定分组的校验注解@NotBlank，在分组校验情况@Validated({AddGroup.class})下不生效，只会在@Validated生效；</font></p><h1 id="自定义校验"><a href="#自定义校验" class="headerlink" title="自定义校验"></a>自定义校验</h1><h2 id="编写一个自定义的校验注解"><a href="#编写一个自定义的校验注解" class="headerlink" title="编写一个自定义的校验注解"></a>编写一个自定义的校验注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ListValue &#123;</span><br><span class="line">　　<span class="comment">// 错误提示信息(需要在resorces下创建ValidationMessages.properties文件)</span></span><br><span class="line">　　<span class="comment">// 并在文件内添加　　包名.ListValue.message=错误提示内容</span></span><br><span class="line">　　<span class="comment">// 包名.ListValue.message　可随意定义，比如aaa(需和properties中的key对应)</span></span><br><span class="line"><span class="function">String <span class="title">message</span><span class="params">()</span> <span class="keyword">default</span> &quot;</span>&#123;包名.ListValue.message&#125;<span class="string">&quot;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Class&lt;?&gt;[] groups() default &#123; &#125;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Class&lt;? extends Payload&gt;[] payload() default &#123; &#125;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">int[] vals() default &#123; &#125;;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="编写一个自定义的校验器-ConstraintValidator"><a href="#编写一个自定义的校验器-ConstraintValidator" class="headerlink" title="编写一个自定义的校验器 ConstraintValidator"></a>编写一个自定义的校验器 ConstraintValidator</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListValueConstraintValidator</span> <span class="keyword">implements</span> <span class="title">ConstraintValidator</span>&lt;<span class="title">ListValue</span>,<span class="title">Integer</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Set&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"><span class="comment">// 初始化方法</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">(ListValue constraintAnnotation)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] vals = constraintAnnotation.vals();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> val : vals) &#123;</span><br><span class="line">set.add(val);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value   需要校验的值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">     <span class="comment">// 判断是否校验成功</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValid</span><span class="params">(Integer value, ConstraintValidatorContext context)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> set.contains(value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关联自定义的校验器和自定义的校验注解"><a href="#关联自定义的校验器和自定义的校验注解" class="headerlink" title="关联自定义的校验器和自定义的校验注解"></a>关联自定义的校验器和自定义的校验注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在自定义注解上添加：</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="comment">// 校验器可添加多个</span></span><br><span class="line"><span class="meta">@Constraint(validatedBy = &#123; ListValueConstraintValidator.class &#125;)</span></span><br><span class="line"><span class="meta">@Target(&#123; METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE &#125;)</span></span><br><span class="line"><span class="meta">@Retention(RUNTIME)</span></span><br></pre></td></tr></table></figure><h1 id="统一的异常处理-ControllerAdvice"><a href="#统一的异常处理-ControllerAdvice" class="headerlink" title="统一的异常处理@ControllerAdvice"></a>统一的异常处理@ControllerAdvice</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="comment">// @ResponseBody</span></span><br><span class="line"><span class="comment">// @ControllerAdvice(basePackages = &quot;需要异常处理的类或包&quot;)</span></span><br><span class="line"><span class="meta">@RestControllerAdvice(basePackages = &quot;需要异常处理的类或包&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestExceptionControllerAdvice</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ExceptionHandler(value = MethodArgumentNotValidException.class)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">handleVaildException</span><span class="params">(MethodArgumentNotValidException e)</span></span>&#123;</span><br><span class="line">log.error(<span class="string">&quot;数据校验出现问题&#123;&#125;，异常类型：&#123;&#125;&quot;</span>, e.getMessage(), e.getClass());</span><br><span class="line">BindingResult bindingResult = e.getBindingResult();</span><br><span class="line"></span><br><span class="line">Map&lt;String,String&gt; errorMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"><span class="comment">// 校验错误信息：bindingResult.getFieldErrors()</span></span><br><span class="line">bindingResult.getFieldErrors().forEach((fieldError)-&gt;&#123;</span><br><span class="line">errorMap.put(fieldError.getField(),fieldError.getDefaultMessage());</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">return</span> R.error(<span class="number">500</span>,<span class="string">&quot;参数格式校验失败&quot;</span>).put(<span class="string">&quot;data&quot;</span>,errorMap);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ExceptionHandler(value = Throwable.class)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">handleException</span><span class="params">(Throwable throwable)</span></span>&#123;</span><br><span class="line">log.error(<span class="string">&quot;错误：&quot;</span>,throwable);</span><br><span class="line"><span class="keyword">return</span> R.error(<span class="number">500</span>,<span class="string">&quot;未知异常&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="常用的验证条件注解"><a href="#常用的验证条件注解" class="headerlink" title="常用的验证条件注解"></a>常用的验证条件注解</h1><h2 id="空检查"><a href="#空检查" class="headerlink" title="空检查"></a>空检查</h2><p>@Null 验证对象是否为null<br>@NotNull 验证对象是否不为null, 无法查检长度为0的字符串<br>@NotBlank 检查约束字符串是不是Null还有被Trim的长度是否大于0,只对字符串,且会去掉前后空格.<br>@NotEmpty 检查约束元素是否为NULL或者是EMPTY.</p><h2 id="Booelan检查"><a href="#Booelan检查" class="headerlink" title="Booelan检查"></a>Booelan检查</h2><p>@AssertTrue 验证 Boolean 对象是否为 true<br>@AssertFalse 验证 Boolean 对象是否为 false</p><h2 id="长度检查"><a href="#长度检查" class="headerlink" title="长度检查"></a>长度检查</h2><p>@Size(min=, max=) 验证对象（Array,Collection,Map,String）长度是否在给定的范围之内<br>@Length(min=, max=) Validates that the annotated string is between min and max included.</p><h2 id="日期检查"><a href="#日期检查" class="headerlink" title="日期检查"></a>日期检查</h2><p>@Past 验证 Date 和 Calendar 对象是否在当前时间之前，验证成立的话被注释的元素一定是一个过去的日期<br>@Future 验证 Date 和 Calendar 对象是否在当前时间之后 ，验证成立的话被注释的元素一定是一个将来的日期<br>@Pattern 验证 String 对象是否符合正则表达式的规则，被注释的元素符合制定的正则表达式，regexp:正则表达式 flags: 指定 Pattern.Flag 的数组，表示正则表达式的相关选项。</p><h2 id="数值检查"><a href="#数值检查" class="headerlink" title="数值检查"></a>数值检查</h2><p>建议使用在Stirng,Integer类型，不建议使用在int类型上，因为表单值为“”时无法转换为int，但可以转换为Stirng为”“,Integer为null<br>@Min 验证 Number 和 String 对象是否大等于指定的值<br>@Max 验证 Number 和 String 对象是否小等于指定的值<br>@DecimalMax 被标注的值必须不大于约束中指定的最大值. 这个约束的参数是一个通过BigDecimal定义的最大值的字符串表示.小数存在精度<br>@DecimalMin 被标注的值必须不小于约束中指定的最小值. 这个约束的参数是一个通过BigDecimal定义的最小值的字符串表示.小数存在精度<br>@Digits 验证 Number 和 String 的构成是否合法<br>@Digits(integer=,fraction=) 验证字符串是否是符合指定格式的数字，interger指定整数精度，fraction指定小数精度。<br>@Range(min=, max=) 被指定的元素必须在合适的范围内<br>@Range(min=10000,max=50000,message=”range.bean.wage”)<br>@Valid 递归的对关联对象进行校验, 如果关联对象是个集合或者数组,那么对其中的元素进行递归校验,如果是一个map,则对其中的值部分进行校验.(是否进行递归验证)<br>@CreditCardNumber信用卡验证<br>@Email 验证是否是邮件地址，如果为null,不进行验证，算通过验证。 </p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux安装jdk1.8</title>
      <link href="posts/3542552830/"/>
      <url>posts/3542552830/</url>
      
        <content type="html"><![CDATA[<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入到local目录，创建java文件夹并把jdk解压到该目录下</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">shmily</span> ~]<span class="comment"># cd /usr/local</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">shmily</span> <span class="type">local</span>]<span class="comment"># mkdir java</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">shmily</span> <span class="type">local</span>]<span class="comment"># tar -zxvf jdk-8u161-linux-x64.tar.gz -C java</span></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">shmily</span> <span class="type">local</span>]<span class="comment"># vim /etc/profile</span></span><br><span class="line"><span class="comment"># 文件末尾添加内容：</span></span><br><span class="line"></span><br><span class="line">export JAVA_HOME=/usr/local/java/jdk1.<span class="number">8.0</span>_161</span><br><span class="line">export JRE_HOME=<span class="variable">$</span>&#123;JAVA_HOME&#125;/jre</span><br><span class="line">export CLASSPATH=.:<span class="variable">$</span>&#123;JAVA_HOME&#125;/lib:<span class="variable">$</span>&#123;JRE_HOME&#125;/lib:<span class="variable">$CLASSPATH</span></span><br><span class="line">export JAVA_PATH=<span class="variable">$</span>&#123;JAVA_HOME&#125;/bin:<span class="variable">$</span>&#123;JRE_HOME&#125;/bin</span><br><span class="line">export PATH=<span class="variable">$PATH:</span><span class="variable">$</span>&#123;JAVA_PATH&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行命令使配置生效：</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">shmily</span> <span class="type">local</span>]<span class="comment"># source /etc/profile</span></span><br><span class="line"><span class="comment"># 查看jdk是否安装完成：</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">shmily</span> <span class="type">local</span>]<span class="comment"># java -version</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows下使用.msi进行node.js安装</title>
      <link href="posts/2673616333/"/>
      <url>posts/2673616333/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><p>nodejs下载</p><p>Node.js 安装包及源码下载地址为：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a><br><img src= "/img/loading.gif" data-lazy-src="https://tvax4.sinaimg.cn/large/00724TQEgy1gqdf3weg4uj30rp0emmym.jpg" alt="在这里插入图片描述"><br>你可以根据不同平台系统选择你需要的 Node.js 安装包。<br>此文章介绍windows环境下的安装：</p><p>一直执行next到安装完成：<br><img src= "/img/loading.gif" data-lazy-src="https://tva4.sinaimg.cn/large/00724TQEgy1gqdf48sui8j30h60df74x.jpg" alt="在这里插入图片描述"></p><p>Node.js runtime 表示运行环境<br>npm package manager表示npm包管理器<br>online documentation shortcuts 在线文档快捷方式<br>Add to PATH添加到环境变量<br><img src= "/img/loading.gif" data-lazy-src="https://tva4.sinaimg.cn/large/00724TQEgy1gqdf4gyyeij30h60dfq3y.jpg" alt="在这里插入图片描述"><br>在键盘按下【win+R】键，输入cmd，然后回车，打开cmd窗口验证：<br>显示版本号代表安装完成：<br><img src= "/img/loading.gif" data-lazy-src="https://tvax3.sinaimg.cn/large/00724TQEgy1gqdf4o0vavj30r90efdg7.jpg" alt="在这里插入图片描述"><br>安装完成后在安装目录创建node_global及node_cache文件夹：<br><img src= "/img/loading.gif" data-lazy-src="https://tvax3.sinaimg.cn/large/00724TQEgy1gqdf4u0fz4j30si0fggne.jpg" alt="在这里插入图片描述"><br>创建完两个空文件夹之后，打开cmd命令窗口，输入：<br><code>npm config set prefix &quot;E:\nodejs\node_global&quot;</code><br><code>npm config set cache &quot;E:\nodejs\node_cache&quot;</code></p><p>设置环境变量：<br><em>进入环境变量对话框，在系统变量下新建NODE_PATH，输入E:\nodejs\node_global\node_modules，将用户变量下Path中的C:\Users\XXX\AppData\Roaming\npm修改为E:\nodejs\node_global</em></p><p>安装模块进行测试：<br><code>npm install express -g     # -g意思为全局安装</code></p><p><font color=#FF0000>报错：npm install rollbackFailedOptional: verb npm-session</font><br>cmd执行<code>npm config set registry http://registry.npm.taobao.org</code>命令；</p><p>安装全局vue-cli脚手架：<br>cmd执行：<br><code>cnpm install -g vue-cli  #  等待安装</code><br><code>vue   #  若出现vue信息说明表示成功</code></p><p><font color=#FF0000>cnpm不是内部命令的解决办法：</font></p><p>系统变量中的path里加：E:\nodejs\node_global<br>然后退出重新打开cmd，输入<code>cnpm -v</code></p><p><font color=#FF0000>cnpm : 无法加载文件 E:\nodejs\node_global\cnpm.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies 解决方法：</font><br>以管理员身份运行windows powershell，运行命令set-ExecutionPolicy RemoteSigned</p><p>至此，node.js安装完成。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
