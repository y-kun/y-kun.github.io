<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>application/x-www-form-urlencoded请求参数格式</title>
      <link href="posts/2242584043/"/>
      <url>posts/2242584043/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> params = <span class="keyword">new</span> URLSearchParams()  </span><br><span class="line">params.append(<span class="string">&#x27;start_date&#x27;</span>, <span class="built_in">this</span>.listQuery.start_date)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>jar中没有主清单属性</title>
      <link href="posts/2929262520/"/>
      <url>posts/2929262520/</url>
      
        <content type="html"><![CDATA[<h2 id="pom-xml添加插件："><a href="#pom-xml添加插件：" class="headerlink" title="pom.xml添加插件："></a>pom.xml添加插件：</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;build&gt;</span></span><br><span class="line">　<span class="string">&lt;!--自定义打包文件名--&gt;</span></span><br><span class="line">　<span class="string">&lt;finalName&gt;dinService&lt;/finalName&gt;</span></span><br><span class="line">　　<span class="string">&lt;plugins&gt;</span></span><br><span class="line">　　　<span class="string">&lt;plugin&gt;</span></span><br><span class="line">　　　　<span class="string">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span><br><span class="line">　　　　<span class="string">&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span></span><br><span class="line">　　　　<span class="string">&lt;configuration&gt;</span></span><br><span class="line">　　　　　<span class="string">&lt;fork&gt;true&lt;/fork&gt;</span></span><br><span class="line">　　　　　<span class="string">&lt;!--</span> <span class="string">如果没有该配置，devtools不会生效</span> <span class="string">--&gt;</span></span><br><span class="line">　　　　　<span class="string">&lt;!--</span> <span class="string">指定该Main</span> <span class="string">Class为全局的唯一入口</span> <span class="string">--&gt;</span></span><br><span class="line">　　　　　<span class="string">&lt;mainClass&gt;cool.kunkun.service.ServiceApplication&lt;/mainClass&gt;</span></span><br><span class="line">　　　　　<span class="string">&lt;layout&gt;ZIP&lt;/layout&gt;</span></span><br><span class="line">　　　　<span class="string">&lt;/configuration&gt;</span></span><br><span class="line">　　　　<span class="string">&lt;executions&gt;</span></span><br><span class="line">　　　　　<span class="string">&lt;execution&gt;</span></span><br><span class="line">　　　　　　<span class="string">&lt;goals&gt;</span></span><br><span class="line">　　　　　　　<span class="string">&lt;goal&gt;repackage&lt;/goal&gt;&lt;!--</span> <span class="string">可以把依赖的包都打包到生成的Jar包中</span> <span class="string">--&gt;</span></span><br><span class="line">　　　　　　<span class="string">&lt;/goals&gt;</span></span><br><span class="line">　　　　　<span class="string">&lt;/execution&gt;</span></span><br><span class="line">　　　　<span class="string">&lt;/executions&gt;</span></span><br><span class="line">　　　<span class="string">&lt;/plugin&gt;</span></span><br><span class="line">　　<span class="string">&lt;/plugins&gt;</span></span><br><span class="line"><span class="string">&lt;/build&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>指定sshkey访问远程仓库</title>
      <link href="posts/undefined/"/>
      <url>posts/undefined/</url>
      
        <content type="html"><![CDATA[<h3 id="在-ssh-目录下新建config文件，添加内容："><a href="#在-ssh-目录下新建config文件，添加内容：" class="headerlink" title="在_/.ssh_目录下新建config文件，添加内容："></a><strong>在_/.ssh_目录下新建config文件，添加内容：</strong></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 远程仓库地址</span></span><br><span class="line">Host <span class="string">&quot;dev.wizarpos.com&quot;</span></span><br><span class="line"><span class="comment"># 提供给git使用</span></span><br><span class="line">User <span class="string">&quot;git&quot;</span></span><br><span class="line"><span class="comment"># 私钥文件路径</span></span><br><span class="line">IdentityFile <span class="string">&quot;C:/Users/demo/.ssh/id_rsa_wizarpos&quot;</span></span><br><span class="line"><span class="comment"># 远程端口</span></span><br><span class="line">port 30022</span><br><span class="line"><span class="comment"># 为true代表使用此配置</span></span><br><span class="line">IdentitiesOnly yes</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://tva1.sinaimg.cn/large/00724TQEgy1gqe7xh1bk1j30cl07175z.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vue-element-template登录流程</title>
      <link href="posts/1374621978/"/>
      <url>posts/1374621978/</url>
      
        <content type="html"><![CDATA[<h1 id="src-view-login-index-vue"><a href="#src-view-login-index-vue" class="headerlink" title="src/view/login/index.vue"></a>src/view/login/index.vue</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">handleLogin</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">　<span class="built_in">this</span>.$refs.loginForm.validate(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span><br><span class="line">　　<span class="keyword">if</span> (valid) &#123;</span><br><span class="line">　　　<span class="built_in">this</span>.loading = <span class="literal">true</span></span><br><span class="line">　　　<span class="built_in">this</span>.$store.dispatch(<span class="string">&#x27;user/login&#x27;</span>, <span class="built_in">this</span>.loginForm).then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">　　　　　<span class="built_in">this</span>.$router.push(&#123; <span class="attr">path</span>: <span class="built_in">this</span>.redirect <span class="string">&#x27;&#x27;</span> <span class="string">&#x27;/&#x27;</span> &#125;)</span><br><span class="line">　　　　　<span class="built_in">this</span>.loading = <span class="literal">false</span></span><br><span class="line">　　　　&#125;).catch(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">　　　　　<span class="built_in">this</span>.loading = <span class="literal">false</span></span><br><span class="line">　　　　&#125;)</span><br><span class="line">　　&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">　　　<span class="built_in">console</span>.log(<span class="string">&#x27;error submit!!&#x27;</span>)</span><br><span class="line">　　　<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">　　&#125;</span><br><span class="line">　&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="this-store-dispatch-‘user-login’-this-loginForm-—-gt-src-store-modules-user-js"><a href="#this-store-dispatch-‘user-login’-this-loginForm-—-gt-src-store-modules-user-js" class="headerlink" title="this.$store.dispatch(‘user/login’, this.loginForm)　—&gt;　src/store/modules/user.js"></a>this.$store.dispatch(‘user/login’, this.loginForm)　—&gt;　src/store/modules/user.js</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Login, logout, getUserInfo &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/user&#x27;</span></span><br><span class="line"><span class="function"><span class="title">login</span>(<span class="params">&#123; commit &#125;, userInfo</span>)</span> &#123;</span><br><span class="line">　<span class="keyword">const</span> &#123; username, password &#125; = userInfo</span><br><span class="line">　<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">　　login(&#123; <span class="attr">username</span>: username.trim(), <span class="attr">password</span>: password &#125;).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">　　　<span class="keyword">const</span> &#123; data &#125; = response</span><br><span class="line">　　　commit(<span class="string">&#x27;SET_TOKEN&#x27;</span>, data.token)</span><br><span class="line">　　　setToken(data.token)</span><br><span class="line">　　　resolve()</span><br><span class="line">　　&#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">　　　reject(error)</span><br><span class="line">　　&#125;)</span><br><span class="line">　&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="import-Login-logout-getUserInfo-from-‘-api-user’-—-gt-src-api-user-js"><a href="#import-Login-logout-getUserInfo-from-‘-api-user’-—-gt-src-api-user-js" class="headerlink" title="import { Login, logout, getUserInfo } from ‘@/api/user’　—&gt;　src/api/user.js"></a>import { Login, logout, getUserInfo } from ‘@/api/user’　—&gt;　src/api/user.js</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">　<span class="keyword">return</span> request(&#123;</span><br><span class="line">　　<span class="attr">url</span>: <span class="string">&#x27;/user/login&#x27;</span>,</span><br><span class="line">　　<span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">　　data</span><br><span class="line">　&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="src-utils-request-js"><a href="#src-utils-request-js" class="headerlink" title="src/utils/request.js"></a>src/utils/request.js</h1><h3 id="注意：-if-res-code-20000-code需改为后端返回的值"><a href="#注意：-if-res-code-20000-code需改为后端返回的值" class="headerlink" title="注意：**if (res.code !== 20000)**　code需改为后端返回的值"></a>注意：**<font color="#ff0000">if (res.code !== 20000)</font>**　code需改为后端返回的值</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">response =&gt; &#123; </span><br><span class="line">　<span class="keyword">const</span> res = response.data </span><br><span class="line"><span class="comment">// if the custom code is not 20000, it is judged as an error. </span></span><br><span class="line">　　<span class="keyword">if</span> (res.code !== <span class="number">20000</span>) &#123;   </span><br><span class="line">　　　Message(&#123;     </span><br><span class="line">　　　　<span class="attr">message</span>: res.message <span class="string">&#x27;&#x27;</span> <span class="string">&#x27;Error&#x27;</span>,     </span><br><span class="line">　　　　<span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>,     </span><br><span class="line">　　　　<span class="attr">duration</span>: <span class="number">5</span> * <span class="number">1000</span>   </span><br><span class="line">　　　&#125;)   </span><br><span class="line">　　　<span class="comment">// 50008: Illegal token; 50012: Other clients logged in; 50014: Token expired;  </span></span><br><span class="line">　　　<span class="keyword">if</span> (res.code === <span class="number">50008</span> <span class="string">&#x27;&#x27;</span> res.code === <span class="number">50012</span> <span class="string">&#x27;&#x27;</span> res.code === <span class="number">50014</span>) &#123;     </span><br><span class="line">　　　　<span class="comment">// to re-login     </span></span><br><span class="line">　　　　MessageBox.confirm(<span class="string">&#x27;You have been logged out, you can cancel to stay on this page, or log in again&#x27;</span>, <span class="string">&#x27;Confirm logout&#x27;</span>, &#123;       </span><br><span class="line">　　　　　<span class="attr">confirmButtonText</span>: <span class="string">&#x27;Re-Login&#x27;</span>,       </span><br><span class="line">　　　　　<span class="attr">cancelButtonText</span>: <span class="string">&#x27;Cancel&#x27;</span>,       </span><br><span class="line">　　　　　<span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>     </span><br><span class="line">　　　　&#125;).then(<span class="function">() =&gt;</span> &#123;       </span><br><span class="line">　　　　　store.dispatch(<span class="string">&#x27;user/resetToken&#x27;</span>).then(<span class="function">() =&gt;</span> &#123;         </span><br><span class="line">　　　　　　location.reload()       </span><br><span class="line">　　　　　&#125;)     </span><br><span class="line">　　　　&#125;)   </span><br><span class="line">　　　&#125;   </span><br><span class="line">　　　<span class="keyword">return</span> <span class="built_in">Promise</span>.reject(<span class="keyword">new</span> <span class="built_in">Error</span>(res.message <span class="string">&#x27;&#x27;</span> <span class="string">&#x27;Error&#x27;</span>)) </span><br><span class="line">　　&#125; <span class="keyword">else</span> &#123;   </span><br><span class="line">　　　<span class="keyword">return</span> res </span><br><span class="line">　　&#125; </span><br><span class="line">　&#125;, </span><br><span class="line">　<span class="function"><span class="params">error</span> =&gt;</span> &#123; </span><br><span class="line">　<span class="built_in">console</span>.log(<span class="string">&#x27;err&#x27;</span> + error) <span class="comment">// for debug </span></span><br><span class="line">　Message(&#123; <span class="attr">message</span>: error.message, </span><br><span class="line">　　<span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>, </span><br><span class="line">　　<span class="attr">duration</span>: <span class="number">5</span> * <span class="number">1000</span> </span><br><span class="line">　&#125;) </span><br><span class="line">　<span class="keyword">return</span> <span class="built_in">Promise</span>.reject(error) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>int转String位数不够前面补零</title>
      <link href="posts/421069899/"/>
      <url>posts/421069899/</url>
      
        <content type="html"><![CDATA[<p><strong><font color="#ff0000">String.format(“%09d”, 25);</font></strong><br>0代表前面要补的字符<br>9代表字符串长度<br>d表示参数为整数类型<br>运行结果为：000000025</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用Hutool生成验证码</title>
      <link href="posts/693567828/"/>
      <url>posts/693567828/</url>
      
        <content type="html"><![CDATA[<h2 id="jar包引入"><a href="#jar包引入" class="headerlink" title="jar包引入"></a>jar包引入</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    　&lt;groupId&gt;cn.hutool&lt;/groupId&gt;</span><br><span class="line">    　&lt;artifactId&gt;hutool-captcha&lt;/artifactId&gt;</span><br><span class="line">    　&lt;version&gt;<span class="number">5.2</span><span class="number">.1</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Api(value = &quot;测试controller&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CaptchaController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StringRedisTemplate redisTemplate;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">　   * 验证码图片存储路径前缀</span></span><br><span class="line"><span class="comment"> 　  **/</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String PREFIX = <span class="string">&quot;E:/&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">　   * 验证码图片存储路径后缀</span></span><br><span class="line"><span class="comment"> 　  **/</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SUFFIX = <span class="string">&quot;.png&quot;</span>;</span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;captcha&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">captcha</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String path;</span><br><span class="line">        CircleCaptcha captcha;</span><br><span class="line">        <span class="comment">// 先生成一个验证码，判断是否存在，如果存在，则重新生成</span></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="comment">//定义图形验证码的长、宽、验证码字符数、干扰元素个数</span></span><br><span class="line">            captcha = CaptchaUtil.createCircleCaptcha(<span class="number">200</span>, <span class="number">100</span>, <span class="number">4</span>, <span class="number">50</span>);</span><br><span class="line">            <span class="comment">//CircleCaptcha captcha = new CircleCaptcha(200, 100, 4, 20);</span></span><br><span class="line">            <span class="comment">//验证码的值</span></span><br><span class="line">            String code = captcha.getCode();</span><br><span class="line">            <span class="comment">//该图片可以在登录完成后删除掉，避免占用资源（取消登陆时也应删除）</span></span><br><span class="line">            path = PREFIX + code + SUFFIX;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">new</span> File(path).exists());</span><br><span class="line">        <span class="comment">//图形验证码写出</span></span><br><span class="line">        captcha.write(path);</span><br><span class="line">        <span class="comment">//把验证码存入到redis中</span></span><br><span class="line">        redisTemplate.opsForValue().set(<span class="string">&quot;1&quot;</span>, captcha.getCode());</span><br><span class="line">        <span class="comment">//当后端代码和验证码图片在同一台服务器上时，可直接返回</span></span><br><span class="line">        <span class="comment">//否则，上传图片到服务器，返回服务器地址</span></span><br><span class="line">        <span class="keyword">return</span> path;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;login&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;登录判断&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">login</span><span class="params">(String username, String password, String code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!check(code)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (username.equals(<span class="string">&quot;admin&quot;</span>) &amp;&amp; password.equals(<span class="string">&quot;admin&quot;</span>)) &#123;</span><br><span class="line">            <span class="comment">//业务逻辑代码...</span></span><br><span class="line">            delFile(PREFIX + code + SUFFIX);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">　   * 检查验证码是否正确</span></span><br><span class="line"><span class="comment">　   *</span></span><br><span class="line"><span class="comment">　   * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">　   * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">　   * <span class="doctag">@author</span> shmily</span></span><br><span class="line"><span class="comment">　   * <span class="doctag">@since</span> 2020/7/6 16:52</span></span><br><span class="line"><span class="comment"> 　  **/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">check</span><span class="params">(String code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (redisTemplate.opsForValue().get(<span class="string">&quot;1&quot;</span>).equalsIgnoreCase(code)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> 　  * 删除验证码文件</span></span><br><span class="line"><span class="comment"> 　  *</span></span><br><span class="line"><span class="comment"> 　  * <span class="doctag">@param</span> path</span></span><br><span class="line"><span class="comment"> 　  * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment"> 　  * <span class="doctag">@author</span> shmily</span></span><br><span class="line"><span class="comment"> 　  * <span class="doctag">@since</span> 2020/7/6 16:52</span></span><br><span class="line"><span class="comment"> 　  **/</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Boolean <span class="title">delFile</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(path);</span><br><span class="line">        <span class="keyword">return</span> file.delete();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>小程序页面间传递对象</title>
      <link href="posts/443277130/"/>
      <url>posts/443277130/</url>
      
        <content type="html"><![CDATA[<h2 id="例如：A跳转到B，需传递selectedGoods对象"><a href="#例如：A跳转到B，需传递selectedGoods对象" class="headerlink" title="例如：A跳转到B，需传递selectedGoods对象"></a>例如：A跳转到B，需传递selectedGoods对象</h2><h4 id="A页面："><a href="#A页面：" class="headerlink" title="A页面："></a><strong>A页面：</strong></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uni.navigateTo(&#123;</span><br><span class="line">　<span class="attr">url</span>:<span class="string">&#x27;/pages/index/settle?selectedGoods=&#x27;</span>+<span class="built_in">encodeURIComponent</span>(<span class="built_in">JSON</span>.stringify(<span class="built_in">this</span>.selectedGoods))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="B页面："><a href="#B页面：" class="headerlink" title="B页面："></a><strong>B页面：</strong></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">onLoad</span>(<span class="params">data</span>)</span> &#123;</span><br><span class="line">　<span class="built_in">console</span>.log(<span class="built_in">JSON</span>.parse(<span class="built_in">decodeURIComponent</span>(data.selectedGoods)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 微信小程序 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>wordpress可视化环境下输入空格</title>
      <link href="posts/395619666/"/>
      <url>posts/395619666/</url>
      
        <content type="html"><![CDATA[<h1 id="右击右下角中英文切换，选择设置选项"><a href="#右击右下角中英文切换，选择设置选项" class="headerlink" title="右击右下角中英文切换，选择设置选项"></a>右击右下角中英文切换，选择设置选项</h1><h1 id="选择按键选项"><a href="#选择按键选项" class="headerlink" title="选择按键选项"></a>选择按键选项</h1><p><img src= "/img/loading.gif" data-lazy-src="https://tva4.sinaimg.cn/large/00724TQEgy1gqdhe45unej30m80hkjsj.jpg"></p><h1 id="打开全-半角切换功能，切换到全角之后再按空格即可"><a href="#打开全-半角切换功能，切换到全角之后再按空格即可" class="headerlink" title="打开全/半角切换功能，切换到全角之后再按空格即可"></a>打开全/半角切换功能，切换到全角之后再按空格即可</h1><p><img src= "/img/loading.gif" data-lazy-src="https://tva3.sinaimg.cn/large/00724TQEgy1gqdheagysdj30m80hkgml.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> wordpress </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>DatePicker禁用某个日期之前的时间</title>
      <link href="posts/1302172676/"/>
      <url>posts/1302172676/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-date-picker</span></span></span><br><span class="line"><span class="tag">　<span class="attr">v-model</span>=<span class="string">&quot;show.endTime&quot;</span></span></span><br><span class="line"><span class="tag">　<span class="attr">type</span>=<span class="string">&quot;date&quot;</span></span></span><br><span class="line"><span class="tag">　<span class="attr">:placeholder</span>=<span class="string">&quot;$t(&#x27;time.endTime&#x27;)&quot;</span></span></span><br><span class="line"><span class="tag">　<span class="attr">value-format</span>=<span class="string">&quot;yyyy-MM-dd&quot;</span></span></span><br><span class="line"><span class="tag">　<span class="attr">:picker-options</span>=<span class="string">&quot;pickerOptions&quot;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">　<span class="attr">pickerOptions</span>: &#123;</span><br><span class="line">　　<span class="attr">disabledDate</span>: <span class="function">(<span class="params">time</span>) =&gt;</span> &#123;</span><br><span class="line">　　　<span class="keyword">return</span> time.getTime() &lt; <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">this</span>.startTime).getTime() + <span class="number">8.64e7</span></span><br><span class="line">　　&#125;</span><br><span class="line">　&#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="#ff0000">ps：return&nbsp;time.getTime()&nbsp;&lt;&nbsp;new&nbsp;Date(this.startTime).getTime()&nbsp;+&nbsp;8.64e7</font> 代表只能选择this.startTime之后的时间，并且this.startTime这天不能选择 (8.64e7：科学计数法，代表8.64×10的7次方)</p>]]></content>
      
      
      <categories>
          
          <category> element-ui </category>
          
      </categories>
      
      
        <tags>
            
            <tag> el-date-picker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>el-input无法输入</title>
      <link href="posts/3501428516/"/>
      <url>posts/3501428516/</url>
      
        <content type="html"><![CDATA[<h1 id="添加-input-事件"><a href="#添加-input-事件" class="headerlink" title="添加_@input_事件"></a>添加_@input_事件</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;show.points&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:160px;&quot;</span> @<span class="attr">input</span>=<span class="string">&quot;change($event)&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h1 id="监听输入事件，在输入时强制刷新"><a href="#监听输入事件，在输入时强制刷新" class="headerlink" title="监听输入事件，在输入时强制刷新"></a>监听输入事件，在输入时强制刷新</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">change</span>(<span class="params">e</span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.$forceUpdate()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> element-ui </category>
          
      </categories>
      
      
        <tags>
            
            <tag> el-input </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于LNMP搭建wordpress博客系统</title>
      <link href="posts/3665250559/"/>
      <url>posts/3665250559/</url>
      
        <content type="html"><![CDATA[<h2 id="总体依赖安装："><a href="#总体依赖安装：" class="headerlink" title="总体依赖安装："></a>总体依赖安装：</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install <span class="literal">-y</span> pcre pcre<span class="literal">-devel</span> zlib zlib<span class="literal">-devel</span> openssl openssl<span class="literal">-devel</span> gcc gcc<span class="literal">-c</span>++ zlib zlib<span class="literal">-devel</span> openssl openssl<span class="literal">-devel</span> pcre pcre<span class="literal">-devel</span> libaio<span class="literal">-devel</span> libxml2 libxml2<span class="literal">-devel</span> openssl openssl<span class="literal">-devel</span> <span class="built_in">curl</span><span class="literal">-devel</span> libjpeg<span class="literal">-devel</span> libpng<span class="literal">-devel</span> freetype<span class="literal">-devel</span> libmcrypt<span class="literal">-devel</span> libzip<span class="literal">-devel</span> pcre<span class="literal">-devel</span></span><br></pre></td></tr></table></figure><h1 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入/usr/<span class="built_in">local</span>目录并下载nginx安装包</span></span><br><span class="line">cd /usr/local</span><br><span class="line">wget http://nginx.org/download/nginx-1.12.1.tar.gz</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压、修改文件名并进入nginx目录</span></span><br><span class="line">tar -zxvf nginx-1.12.1.tar.gz</span><br><span class="line">mv nginx-1.12.1 nginx</span><br><span class="line">cd nginx</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置</span></span><br><span class="line">./configure --with-http_ssl_module --prefix=/usr/local/nginx</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装并编译</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建软连接并启动</span></span><br><span class="line">ln -s /usr/local/nginx/sbin/nginx</span><br><span class="line">./nginx</span><br></pre></td></tr></table></figure><h1 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载mysql安装包</span></span><br><span class="line">wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.26-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压</span></span><br><span class="line">tar -xvf mysql-5.7.26-linux-glibc2.12-x86_64.tar</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重命名</span></span><br><span class="line">mv mysql-5.7.26-linux-glibc2.12-x86_64 /usr/local/mysql</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加用户组mysql和用户mysql,并将其添加到mysql用户组中</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> useradd -r参数表示mysql用户是系统用户，不可用于登录系统</span> </span><br><span class="line"><span class="meta">#</span><span class="bash"> useradd -g参数表示把mysql用户添加到mysql用户组中</span></span><br><span class="line">groupadd mysql</span><br><span class="line">useradd -r -g mysql mysql</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建数据目录并赋予权限</span></span><br><span class="line">mkdir -p /data/mysql</span><br><span class="line">chown mysql:mysql -R /data/mysql</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置my.cnf</span></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将内容修改为：</span></span><br><span class="line">[mysqld]</span><br><span class="line">bind-address=0.0.0.0</span><br><span class="line">port=3306</span><br><span class="line">user=mysql</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/data/mysql</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">[mysqld_safe]</span><br><span class="line">user=mysql</span><br><span class="line">log-error=/data/mysql/mysql.err</span><br><span class="line">pid-file=/data/mysql/mysql.pid</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入mysql的bin目录并初始化（需记住输出日志末尾的密码）</span></span><br><span class="line">cd /usr/local/mysql/bin/</span><br><span class="line">./mysqld --defaults-file=/etc/my.cnf --basedir=/usr/local/mysql/ --datadir=/data/mysql/ --user=mysql --initialize</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将mysql.server放置到/etc/init.d/mysql中</span></span><br><span class="line">cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysql</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动mysql服务</span></span><br><span class="line">service mysql start</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入mysql（密码为初始化时生成的临时密码）</span></span><br><span class="line">mysql -u root -p 临时密码</span><br></pre></td></tr></table></figure><p>如运行报错：<font color="#ff0000">Access denied for user ‘root’@’localhost’</font>：<br>修改_/etc/my.cnf：[mysqld]中添加 skip-grant-tables 即可（此命令为跳过权限验证）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 修改密码</span></span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;password&#x27; PASSWORD EXPIRE NEVER;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建用户并添加权限提供给远程连接使用</span></span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;password&#x27; WITH GRANT OPTION;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 刷新权限</span></span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h1 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载PHP安装包</span></span><br><span class="line">wget https://www.php.net/distributions/php-7.3.3.tar.gz</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压重命名并进入php目录</span></span><br><span class="line">tar -zxzf php-7.3.3.tar.gz</span><br><span class="line">mv php-7.3.3 php</span><br><span class="line">cd php-7.3.3</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置</span></span><br><span class="line">./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc --with-config-file-scan-dir=/usr/local/php/etc/php.d --with-mcrypt=/usr/include --enable-mysqlnd --with-mysqli --with-pdo-mysql --enable-fpm --with-fpm-user=nginx --with-fpm-group=nginx --with-gd --with-iconv --with-zlib --enable-xml --enable-shmop --enable-sysvsem --with-curl</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编译并安装</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 复制配置文件并修改文件名</span></span><br><span class="line">cp php.ini-production /usr/local/php/bin/php.ini</span><br><span class="line">cd /usr/loacl/php/etc/</span><br><span class="line">cp php-fpm.conf.default php-fpm.conf</span><br><span class="line">cd /usr/local/php/etc/php-fpm.d</span><br><span class="line">cp www.conf.default www.conf</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改用户和用户组</span></span><br><span class="line">vim /usr/local/php/etc/php-fpm.d/www.conf</span><br><span class="line">user = 当前用户</span><br><span class="line">group = 当前用户组</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置nginx，使其支持php</span></span><br><span class="line">location ~ .php$ &#123;</span><br><span class="line">root html;</span><br><span class="line">fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">fastcgi_index index.php;</span><br><span class="line">fastcgi_param SCRIPT_FILENAME /$document_root$fastcgi_script_name;</span><br><span class="line">include fastcgi_params;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建软连接并启动</span></span><br><span class="line">ln -s /usr/local/php/sbin/php-fpm</span><br><span class="line">./php-fpm</span><br></pre></td></tr></table></figure><h1 id="安装wordpress"><a href="#安装wordpress" class="headerlink" title="安装wordpress"></a>安装wordpress</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载wordpress</span></span><br><span class="line">wget https://cn.wordpress.org/wordpress-5.4-zh_CN.tar.gz</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压并复制wordpress到nginx根目录下</span></span><br><span class="line">tar -zxvf wordpress-4.8.1-zh_CN.tar.gz</span><br><span class="line">cp -R wordpress /nginx/html</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 复制配置文件</span></span><br><span class="line">cd nginx/html/wordpress/</span><br><span class="line">cp wp-config-sample.php wp-config.php</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改配置文件</span></span><br><span class="line">vim wp-config.php</span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置数据库信息：</span></span><br><span class="line">/** WordPress数据库的名称 */</span><br><span class="line">define(&#x27;DB_NAME&#x27;, &#x27;wpdb&#x27;);</span><br><span class="line">/** MySQL数据库用户名 */</span><br><span class="line">define(&#x27;DB_USER&#x27;, &#x27;wpadmin&#x27;);</span><br><span class="line">/** MySQL数据库密码 */</span><br><span class="line">define(&#x27;DB_PASSWORD&#x27;, &#x27;pass&#x27;);</span><br><span class="line">/** MySQL主机 */</span><br><span class="line">define(&#x27;DB_HOST&#x27;, &#x27;localhost&#x27;);</span><br><span class="line">/** 创建数据表时默认的文字编码 */</span><br><span class="line">define(&#x27;DB_CHARSET&#x27;, &#x27;utf8&#x27;);</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入mysql并创建wordpress数据库及用户</span></span><br><span class="line">mysql -u root -p</span><br><span class="line">create database wpdb character set utf8;</span><br><span class="line">grant all privileges on wpdb.* to &#x27;wpadmin&#x27;@&#x27;localhost&#x27; identified by &#x27;pass&#x27;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h2 id="打开浏览器完成wordpress配置：xxx-xxx-xxx-xxx-wordpress-wp-admin-install-php，输入网站名称、管理帐号、密码、邮箱"><a href="#打开浏览器完成wordpress配置：xxx-xxx-xxx-xxx-wordpress-wp-admin-install-php，输入网站名称、管理帐号、密码、邮箱" class="headerlink" title="打开浏览器完成wordpress配置：xxx.xxx.xxx.xxx/wordpress/wp-admin/install.php，输入网站名称、管理帐号、密码、邮箱"></a>打开浏览器完成wordpress配置：xxx.xxx.xxx.xxx/wordpress/wp-admin/install.php，输入网站名称、管理帐号、密码、邮箱</h2><p>安装报错：<font color="#ff0000">无法建立目录wp-content/uploads/2020/04。有没有上级目录的写权限？</font><br>设置wordpress目录下wp-content的权限即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 -R /usr/local/nginx/html/wordpress/wp-content/</span><br></pre></td></tr></table></figure><h4 id="安装插件需要ftp服务解决方法："><a href="#安装插件需要ftp服务解决方法：" class="headerlink" title="安装插件需要ftp服务解决方法："></a>安装插件需要ftp服务解决方法：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> wordpress安装目录 ==&gt; wp-config.php,文件末尾添加以下代码：</span></span><br><span class="line">vim /usr/local/nginx/html/wordpress/wp-config.php</span><br><span class="line"></span><br><span class="line">define(&quot;FS_METHOD&quot;,&quot;direct&quot;); </span><br><span class="line">define(&quot;FS_CHMOD_DIR&quot;, 0777); </span><br><span class="line">define(&quot;FS_CHMOD_FILE&quot;, 0777);</span><br></pre></td></tr></table></figure><p><font color="#ff0000">Tips：如想去掉xx.xx.xx.xx/wordpress的wordpress：</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 复制wordpress目录下的index.php到nginx/html目录下，</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改nginx/html/index.php：</span></span><br><span class="line">require DIR . &#x27;/wp-blog-header.php&#x27;;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 改为</span></span><br><span class="line">require DIR . &#x27;/wordpress/wp-blog-header.php&#x27;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> wordpress </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> mysql </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下RabbitMQ安装及配置</title>
      <link href="posts/1589426423/"/>
      <url>posts/1589426423/</url>
      
        <content type="html"><![CDATA[<div id="article_content" class="article_content clearfix">            <link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-211130ba7a.css">            <br/>           <div>本文转自：<a href="https://blog.csdn.net/zhm3023/article/details/82217222">https://blog.csdn.net/zhm3023/article/details/82217222</a></div>                       <br/>           <div/>                            <div class="htmledit_views" id="content_views">                                            <p>rabbitMQ是一个在AMQP协议标准基础上完整的，可服用的企业消息系统。它遵循Mozilla Public License开源协议，采用 Erlang 实现的工业级的消息队列(MQ)服务器，Rabbit MQ 是建立在Erlang OTP平台上。</p><p>1、安装Erlang</p><p>下载地址：<a href="https://www.erlang.org/downloads" rel="nofollow">https://www.erlang.org/downloads</a>，本文选择<a href="http://erlang.org/download/otp_win64_21.0.1.exe" rel="nofollow">OTP 21.0.1 Windows 64-bit Binary File&nbsp;</a>(91707927)</p><p>设置环境变量，新建ERLANG_HOME</p><p><img alt="" class="has" height="134" src= "/img/loading.gif" data-lazy-src="https://img-blog.csdn.net/2018083010261937?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pobTMwMjM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="350"></p><p>修改环境变量path，增加Erlang变量至path，%ERLANG_HOME%\bin;</p><p>打开cmd命令框，输入erl</p><p><img alt="" class="has" height="184" src= "/img/loading.gif" data-lazy-src="https://img-blog.csdn.net/20180830102843667?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pobTMwMjM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="489"></p><p>至此，Erlang 安装完成</p><p>2、安装rabbitmq</p><p>下载地址：<a href="http://www.rabbitmq.com/download.html" rel="nofollow">http://www.rabbitmq.com/download.html</a></p><p>exe安装地址：<a href="http://www.rabbitmq.com/install-windows.html" rel="nofollow">http://www.rabbitmq.com/install-windows.html</a></p><p>解压缩安装地址：<a href="http://www.rabbitmq.com/install-windows-manual.html" rel="nofollow">http://www.rabbitmq.com/install-windows-manual.html</a></p><p>本文选择解压缩安装<a href="https://dl.bintray.com/rabbitmq/all/rabbitmq-server/3.7.7/rabbitmq-server-windows-3.7.7.zip" rel="nofollow">rabbitmq-server-windows-3.7.7.zip</a></p><p>将<a href="https://dl.bintray.com/rabbitmq/all/rabbitmq-server/3.7.7/rabbitmq-server-windows-3.7.7.zip" rel="nofollow">rabbitmq-server-windows-3.7.7.zip</a>解压缩至D:\Program Files目录下</p><p>设置环境变量，新建RABBITMQ_SERVER</p><p><img alt="" class="has" height="139" src= "/img/loading.gif" data-lazy-src="https://img-blog.csdn.net/20180830103603987?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pobTMwMjM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="350"></p><p>修改环境变量path，增加rabbitmq变量至path，%RABBITMQ_SERVER%\sbin;</p><p>打开cmd命令框，切换至D:\Program Files\rabbitmq_server-3.7.7\sbin目录下，输入rabbitmqctl status</p><p><img alt="" class="has" height="602" src= "/img/loading.gif" data-lazy-src="https://img-blog.csdn.net/20180830103803858?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pobTMwMjM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="664"></p><p>说明rabbmitmq未启动，继续下面操作。</p><p>安装插件，命令：rabbitmq-plugins.bat enable rabbitmq_management,出现：</p><p><img alt="" class="has" height="231" src= "/img/loading.gif" data-lazy-src="https://img-blog.csdn.net/20180830104340321?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pobTMwMjM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="669"></p><p>解决方法：&nbsp;<br>将 C:\Users\Administrator\.erlang.cookie 同步至C:\Windows\System32\config\systemprofile\.erlang.cookie&nbsp;</p><p>同时删除：C:\Users\Administrator\AppData\Roaming\RabbitMQ目录</p><p>输入命令：rabbitmq-plugins.bat enable rabbitmq_management ，出现下面信息表示插件安装成功：</p><p><img alt="" class="has" height="332" src= "/img/loading.gif" data-lazy-src="https://img-blog.csdn.net/20180830104802723?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pobTMwMjM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="676"></p><p>输入命令：rabbitmq-server.bat</p><p><img alt="" class="has" height="293" src= "/img/loading.gif" data-lazy-src="https://img-blog.csdn.net/20180830105821133?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pobTMwMjM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="673"></p><p>rabbitmq启动成功，浏览器中<a href="http://localhost:15672" rel="nofollow">http://localhost:15672</a>，</p><p><img alt="" class="has" height="475" src= "/img/loading.gif" data-lazy-src="https://img-blog.csdn.net/20180830104928623?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pobTMwMjM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="962"></p><p>输入guest,guest进入rabbitMQ管理控制台：</p><p><img alt="" class="has" height="794" src= "/img/loading.gif" data-lazy-src="https://img-blog.csdn.net/20180830105034225?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pobTMwMjM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="1200"></p><p>打开cmd，再次输入命令：rabbitmqctl status</p><p><img alt="" class="has" height="1010" src= "/img/loading.gif" data-lazy-src="https://img-blog.csdn.net/20180830105147926?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pobTMwMjM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" width="664"></p><p>至此，rabbitMQ安装部署完成。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>idea方法注释模板</title>
      <link href="posts/3159180473/"/>
      <url>posts/3159180473/</url>
      
        <content type="html"><![CDATA[<p><font color="#ff0000">File–&gt;Settings–&gt;Editor–&gt;Live Templates</font><br><img src= "/img/loading.gif" data-lazy-src="https://tvax1.sinaimg.cn/large/00724TQEgy1gqdgvm388zj30yp0jzq54.jpg" alt="在这里插入图片描述"><br><font color="#ff0000">新建组名</font><br><img src= "/img/loading.gif" data-lazy-src="https://tvax3.sinaimg.cn/large/00724TQEgy1gqdgvyow1oj30ag041mx1.jpg" alt="在这里插入图片描述"><br><font color="#ff0000">设置模板内容</font><img src= "/img/loading.gif" data-lazy-src="https://tva3.sinaimg.cn/large/00724TQEgy1gqdgw6w0ccj30yp0jz76v.jpg" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">* </span><br><span class="line">* TODO</span><br><span class="line">* </span><br><span class="line">* @param $param$</span><br><span class="line">* @<span class="built_in">return</span> $<span class="built_in">return</span>$</span><br><span class="line">* @author $USER$</span><br><span class="line">* @since $DATE$ $TIME$</span><br><span class="line">**/</span><br></pre></td></tr></table></figure><p><font color="#ff0000">设置模板的应用场景</font><br><img src= "/img/loading.gif" data-lazy-src="https://tvax3.sinaimg.cn/large/00724TQEgy1gqdgweg1ozj30yp0jzn0g.jpg" alt="在这里插入图片描述"><br><font color="#ff0000">设置参数的获取方式</font><br><img src= "/img/loading.gif" data-lazy-src="https://tva1.sinaimg.cn/large/00724TQEgy1gqdgwjre9dj307t053mx2.jpg" alt="在这里插入图片描述"><br><img src= "/img/loading.gif" data-lazy-src="https://tva3.sinaimg.cn/large/00724TQEgy1gqdgwsqhnjj30fd07k3yy.jpg" alt="在这里插入图片描述"><br><font color="#ff0000">使用这种方法生成的注释参数类型为：</font><br><img src= "/img/loading.gif" data-lazy-src="https://tvax3.sinaimg.cn/large/00724TQEgy1gqdgx30jx3j307s057jrd.jpg" alt="在这里插入图片描述"><br><font color="#ff0000">如果想去除中括号，修改：</font><br><img src= "/img/loading.gif" data-lazy-src="https://tvax3.sinaimg.cn/large/00724TQEgy1gqdgx8ydusj30ff07m3yz.jpg" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">groovyScript(<span class="string">&quot;def result=&#x27;&#x27;; def params=\&quot;<span class="variable">$&#123;_1&#125;</span>\&quot;.replaceAll(&#x27;[\\\\[|\\\\]|\\\\s]&#x27;, &#x27;&#x27;).split(&#x27;,&#x27;).toList(); for(i = 0; i &lt; params.size(); i++) &#123;</span></span><br><span class="line"><span class="string">if(i!=params.size()-1) result+= params[i]+&#x27;,&#x27;;</span></span><br><span class="line"><span class="string">else&#123;result+= params[i];return result;&#125;</span></span><br><span class="line"><span class="string">&#125;; return result&quot;</span>, methodParameters())</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA常用插件</title>
      <link href="posts/3162798155/"/>
      <url>posts/3162798155/</url>
      
        <content type="html"><![CDATA[<p>lombok<br>free mybatis plugin<br>codeGlance 迷你缩放图<br>Alibaba Java Coding Guidelines 阿里巴巴的编码规约检查插件<br>Alibaba Cloud Toolkit 快速部署到服务器<br>Json Parser json串格式化工具<br>RESTfultoolkit 根据url 查找controller 快捷键：Ctrl \ or Ctrl Alt N</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSR303数据校验</title>
      <link href="posts/293136133/"/>
      <url>posts/293136133/</url>
      
        <content type="html"><![CDATA[<h3 id="导入hibernate-validator包"><a href="#导入hibernate-validator包" class="headerlink" title="导入hibernate-validator包"></a><font color="#ff0000">导入hibernate-validator包</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.hibernate&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;<span class="number">5.2</span><span class="number">.2</span>.Final&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h1 id="普通校验"><a href="#普通校验" class="headerlink" title="普通校验"></a>普通校验</h1><h2 id="给Bean添加校验注解：javax-validation-constraints，并定义自己的message提示"><a href="#给Bean添加校验注解：javax-validation-constraints，并定义自己的message提示" class="headerlink" title="给Bean添加校验注解：javax.validation.constraints，并定义自己的message提示"></a>给Bean添加校验注解：<span class="has-inline-color has-vivid-red-color">javax.validation.constraints</span>，并定义自己的message提示</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line"><span class="meta">@NotBlank(message = &quot;品牌名必须提交&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br></pre></td></tr></table></figure><h2 id="在controller开启校验功能-Valid"><a href="#在controller开启校验功能-Valid" class="headerlink" title="在controller开启校验功能@Valid"></a>在controller开启校验功能@Valid</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">save</span><span class="params">(<span class="meta">@Valid</span> <span class="meta">@RequestBody</span> BrandEntity brand)</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="给校验的bean后紧跟一个BindingResult，就可以获取到校验的结果"><a href="#给校验的bean后紧跟一个BindingResult，就可以获取到校验的结果" class="headerlink" title="给校验的bean后紧跟一个BindingResult，就可以获取到校验的结果"></a>给校验的bean后紧跟一个BindingResult，就可以获取到校验的结果</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">save</span><span class="params">(<span class="meta">@Valid</span> <span class="meta">@RequestBody</span> BrandEntity brand, BindingResult result)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (result.hasErrors()) &#123;</span><br><span class="line">Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"><span class="comment">// 获取校验的错误结果</span></span><br><span class="line">result.getFieldErrors().forEach((item) -&gt; &#123;</span><br><span class="line"><span class="comment">// FieldError 获取到错误提示</span></span><br><span class="line">String message = item.getDefaultMessage();</span><br><span class="line"><span class="comment">// 获取错误的属性的名字</span></span><br><span class="line">String field = item.getField();</span><br><span class="line">map.put(field, message);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> R.error(<span class="number">400</span>, <span class="string">&quot;提交的数据不合法&quot;</span>).put(<span class="string">&quot;data&quot;</span>, map);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">brandService.save(brand);</span><br><span class="line"><span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="分组校验"><a href="#分组校验" class="headerlink" title="分组校验"></a>分组校验</h1><h2 id="创建分组校验接口"><a href="#创建分组校验接口" class="headerlink" title="创建分组校验接口"></a>创建分组校验接口</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AddGroup</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="给Bean添加校验注解，给校验注解标注什么情况需要进行校验"><a href="#给Bean添加校验注解，给校验注解标注什么情况需要进行校验" class="headerlink" title="给Bean添加校验注解，给校验注解标注什么情况需要进行校验"></a>给Bean添加校验注解，给校验注解标注什么情况需要进行校验</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line"><span class="meta">@NotBlank(message = &quot;品牌名必须提交&quot;,groups = &#123;AddGroup.class&#125;)</span></span><br></pre></td></tr></table></figure><h2 id="controller中-Valid修改为-Validated，并标注注解根据哪种分组进行验证"><a href="#controller中-Valid修改为-Validated，并标注注解根据哪种分组进行验证" class="headerlink" title="controller中@Valid修改为@Validated，并标注注解根据哪种分组进行验证"></a>controller中@Valid修改为@Validated，并标注注解根据哪种分组进行验证</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">save</span><span class="params">(<span class="meta">@Validated(&#123;AddGroup.class&#125;)</span> <span class="meta">@RequestBody</span> BrandEntity brand)</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><p><font color="#ff0000">注：默认没有指定分组的校验注解@NotBlank，在分组校验情况@Validated({AddGroup.class})下不生效，只会在@Validated生效；</font></p><h1 id="自定义校验"><a href="#自定义校验" class="headerlink" title="自定义校验"></a>自定义校验</h1><h2 id="编写一个自定义的校验注解"><a href="#编写一个自定义的校验注解" class="headerlink" title="编写一个自定义的校验注解"></a>编写一个自定义的校验注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ListValue &#123;</span><br><span class="line">　　<span class="comment">// 错误提示信息(需要在resorces下创建ValidationMessages.properties文件)</span></span><br><span class="line">　　<span class="comment">// 并在文件内添加　　包名.ListValue.message=错误提示内容</span></span><br><span class="line">　　<span class="comment">// 包名.ListValue.message　可随意定义，比如aaa(需和properties中的key对应)</span></span><br><span class="line"><span class="function">String <span class="title">message</span><span class="params">()</span> <span class="keyword">default</span> &quot;</span>&#123;包名.ListValue.message&#125;<span class="string">&quot;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Class&lt;?&gt;[] groups() default &#123; &#125;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Class&lt;? extends Payload&gt;[] payload() default &#123; &#125;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">int[] vals() default &#123; &#125;;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="编写一个自定义的校验器-ConstraintValidator"><a href="#编写一个自定义的校验器-ConstraintValidator" class="headerlink" title="编写一个自定义的校验器 ConstraintValidator"></a>编写一个自定义的校验器 ConstraintValidator</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListValueConstraintValidator</span> <span class="keyword">implements</span> <span class="title">ConstraintValidator</span>&lt;<span class="title">ListValue</span>,<span class="title">Integer</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Set&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"><span class="comment">// 初始化方法</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">(ListValue constraintAnnotation)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span>[] vals = constraintAnnotation.vals();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> val : vals) &#123;</span><br><span class="line">set.add(val);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value   需要校验的值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">     <span class="comment">// 判断是否校验成功</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValid</span><span class="params">(Integer value, ConstraintValidatorContext context)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> set.contains(value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关联自定义的校验器和自定义的校验注解"><a href="#关联自定义的校验器和自定义的校验注解" class="headerlink" title="关联自定义的校验器和自定义的校验注解"></a>关联自定义的校验器和自定义的校验注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在自定义注解上添加：</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="comment">// 校验器可添加多个</span></span><br><span class="line"><span class="meta">@Constraint(validatedBy = &#123; ListValueConstraintValidator.class &#125;)</span></span><br><span class="line"><span class="meta">@Target(&#123; METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE &#125;)</span></span><br><span class="line"><span class="meta">@Retention(RUNTIME)</span></span><br></pre></td></tr></table></figure><h1 id="统一的异常处理-ControllerAdvice"><a href="#统一的异常处理-ControllerAdvice" class="headerlink" title="统一的异常处理@ControllerAdvice"></a>统一的异常处理@ControllerAdvice</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="comment">// @ResponseBody</span></span><br><span class="line"><span class="comment">// @ControllerAdvice(basePackages = &quot;需要异常处理的类或包&quot;)</span></span><br><span class="line"><span class="meta">@RestControllerAdvice(basePackages = &quot;需要异常处理的类或包&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestExceptionControllerAdvice</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ExceptionHandler(value = MethodArgumentNotValidException.class)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">handleVaildException</span><span class="params">(MethodArgumentNotValidException e)</span></span>&#123;</span><br><span class="line">log.error(<span class="string">&quot;数据校验出现问题&#123;&#125;，异常类型：&#123;&#125;&quot;</span>, e.getMessage(), e.getClass());</span><br><span class="line">BindingResult bindingResult = e.getBindingResult();</span><br><span class="line"></span><br><span class="line">Map&lt;String,String&gt; errorMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"><span class="comment">// 校验错误信息：bindingResult.getFieldErrors()</span></span><br><span class="line">bindingResult.getFieldErrors().forEach((fieldError)-&gt;&#123;</span><br><span class="line">errorMap.put(fieldError.getField(),fieldError.getDefaultMessage());</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">return</span> R.error(<span class="number">500</span>,<span class="string">&quot;参数格式校验失败&quot;</span>).put(<span class="string">&quot;data&quot;</span>,errorMap);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ExceptionHandler(value = Throwable.class)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">handleException</span><span class="params">(Throwable throwable)</span></span>&#123;</span><br><span class="line">log.error(<span class="string">&quot;错误：&quot;</span>,throwable);</span><br><span class="line"><span class="keyword">return</span> R.error(<span class="number">500</span>,<span class="string">&quot;未知异常&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="常用的验证条件注解"><a href="#常用的验证条件注解" class="headerlink" title="常用的验证条件注解"></a>常用的验证条件注解</h1><h2 id="空检查"><a href="#空检查" class="headerlink" title="空检查"></a>空检查</h2><p>@Null 验证对象是否为null<br>@NotNull 验证对象是否不为null, 无法查检长度为0的字符串<br>@NotBlank 检查约束字符串是不是Null还有被Trim的长度是否大于0,只对字符串,且会去掉前后空格.<br>@NotEmpty 检查约束元素是否为NULL或者是EMPTY.</p><h2 id="Booelan检查"><a href="#Booelan检查" class="headerlink" title="Booelan检查"></a>Booelan检查</h2><p>@AssertTrue 验证 Boolean 对象是否为 true<br>@AssertFalse 验证 Boolean 对象是否为 false</p><h2 id="长度检查"><a href="#长度检查" class="headerlink" title="长度检查"></a>长度检查</h2><p>@Size(min=, max=) 验证对象（Array,Collection,Map,String）长度是否在给定的范围之内<br>@Length(min=, max=) Validates that the annotated string is between min and max included.</p><h2 id="日期检查"><a href="#日期检查" class="headerlink" title="日期检查"></a>日期检查</h2><p>@Past 验证 Date 和 Calendar 对象是否在当前时间之前，验证成立的话被注释的元素一定是一个过去的日期<br>@Future 验证 Date 和 Calendar 对象是否在当前时间之后 ，验证成立的话被注释的元素一定是一个将来的日期<br>@Pattern 验证 String 对象是否符合正则表达式的规则，被注释的元素符合制定的正则表达式，regexp:正则表达式 flags: 指定 Pattern.Flag 的数组，表示正则表达式的相关选项。</p><h2 id="数值检查"><a href="#数值检查" class="headerlink" title="数值检查"></a>数值检查</h2><p>建议使用在Stirng,Integer类型，不建议使用在int类型上，因为表单值为“”时无法转换为int，但可以转换为Stirng为”“,Integer为null<br>@Min 验证 Number 和 String 对象是否大等于指定的值<br>@Max 验证 Number 和 String 对象是否小等于指定的值<br>@DecimalMax 被标注的值必须不大于约束中指定的最大值. 这个约束的参数是一个通过BigDecimal定义的最大值的字符串表示.小数存在精度<br>@DecimalMin 被标注的值必须不小于约束中指定的最小值. 这个约束的参数是一个通过BigDecimal定义的最小值的字符串表示.小数存在精度<br>@Digits 验证 Number 和 String 的构成是否合法<br>@Digits(integer=,fraction=) 验证字符串是否是符合指定格式的数字，interger指定整数精度，fraction指定小数精度。<br>@Range(min=, max=) 被指定的元素必须在合适的范围内<br>@Range(min=10000,max=50000,message=”range.bean.wage”)<br>@Valid 递归的对关联对象进行校验, 如果关联对象是个集合或者数组,那么对其中的元素进行递归校验,如果是一个map,则对其中的值部分进行校验.(是否进行递归验证)<br>@CreditCardNumber信用卡验证<br>@Email 验证是否是邮件地址，如果为null,不进行验证，算通过验证。 </p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux安装jdk1.8</title>
      <link href="posts/3542552830/"/>
      <url>posts/3542552830/</url>
      
        <content type="html"><![CDATA[<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入到local目录，创建java文件夹并把jdk解压到该目录下</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">shmily</span> ~]<span class="comment"># cd /usr/local</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">shmily</span> <span class="type">local</span>]<span class="comment"># mkdir java</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">shmily</span> <span class="type">local</span>]<span class="comment"># tar -zxvf jdk-8u161-linux-x64.tar.gz -C java</span></span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">shmily</span> <span class="type">local</span>]<span class="comment"># vim /etc/profile</span></span><br><span class="line"><span class="comment"># 文件末尾添加内容：</span></span><br><span class="line"></span><br><span class="line">export JAVA_HOME=/usr/local/java/jdk1.<span class="number">8.0</span>_161</span><br><span class="line">export JRE_HOME=<span class="variable">$</span>&#123;JAVA_HOME&#125;/jre</span><br><span class="line">export CLASSPATH=.:<span class="variable">$</span>&#123;JAVA_HOME&#125;/lib:<span class="variable">$</span>&#123;JRE_HOME&#125;/lib:<span class="variable">$CLASSPATH</span></span><br><span class="line">export JAVA_PATH=<span class="variable">$</span>&#123;JAVA_HOME&#125;/bin:<span class="variable">$</span>&#123;JRE_HOME&#125;/bin</span><br><span class="line">export PATH=<span class="variable">$PATH:</span><span class="variable">$</span>&#123;JAVA_PATH&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行命令使配置生效：</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">shmily</span> <span class="type">local</span>]<span class="comment"># source /etc/profile</span></span><br><span class="line"><span class="comment"># 查看jdk是否安装完成：</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">shmily</span> <span class="type">local</span>]<span class="comment"># java -version</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows下使用.msi进行node.js安装</title>
      <link href="posts/2673616333/"/>
      <url>posts/2673616333/</url>
      
        <content type="html"><![CDATA[<p>nodejs下载</p><p>Node.js 安装包及源码下载地址为：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a><br><img src= "/img/loading.gif" data-lazy-src="https://tvax4.sinaimg.cn/large/00724TQEgy1gqdf3weg4uj30rp0emmym.jpg" alt="在这里插入图片描述"><br>你可以根据不同平台系统选择你需要的 Node.js 安装包。<br>此文章介绍windows环境下的安装：</p><p>一直执行next到安装完成：<br><img src= "/img/loading.gif" data-lazy-src="https://tva4.sinaimg.cn/large/00724TQEgy1gqdf48sui8j30h60df74x.jpg" alt="在这里插入图片描述"></p><p>Node.js runtime 表示运行环境<br>npm package manager表示npm包管理器<br>online documentation shortcuts 在线文档快捷方式<br>Add to PATH添加到环境变量<br><img src= "/img/loading.gif" data-lazy-src="https://tva4.sinaimg.cn/large/00724TQEgy1gqdf4gyyeij30h60dfq3y.jpg" alt="在这里插入图片描述"><br>在键盘按下【win+R】键，输入cmd，然后回车，打开cmd窗口验证：<br>显示版本号代表安装完成：<br><img src= "/img/loading.gif" data-lazy-src="https://tvax3.sinaimg.cn/large/00724TQEgy1gqdf4o0vavj30r90efdg7.jpg" alt="在这里插入图片描述"><br>安装完成后在安装目录创建node_global及node_cache文件夹：<br><img src= "/img/loading.gif" data-lazy-src="https://tvax3.sinaimg.cn/large/00724TQEgy1gqdf4u0fz4j30si0fggne.jpg" alt="在这里插入图片描述"><br>创建完两个空文件夹之后，打开cmd命令窗口，输入：<br><code>npm config set prefix &quot;E:\nodejs\node_global&quot;</code><br><code>npm config set cache &quot;E:\nodejs\node_cache&quot;</code></p><p>设置环境变量：<br><em>进入环境变量对话框，在系统变量下新建NODE_PATH，输入E:\nodejs\node_global\node_modules，将用户变量下Path中的C:\Users\XXX\AppData\Roaming\npm修改为E:\nodejs\node_global</em></p><p>安装模块进行测试：<br><code>npm install express -g     # -g意思为全局安装</code></p><p><font color=#FF0000>报错：npm install rollbackFailedOptional: verb npm-session</font><br>cmd执行<code>npm config set registry http://registry.npm.taobao.org</code>命令；</p><p>安装全局vue-cli脚手架：<br>cmd执行：<br><code>cnpm install -g vue-cli  #  等待安装</code><br><code>vue   #  若出现vue信息说明表示成功</code></p><p><font color=#FF0000>cnpm不是内部命令的解决办法：</font></p><p>系统变量中的path里加：E:\nodejs\node_global<br>然后退出重新打开cmd，输入<code>cnpm -v</code></p><p><font color=#FF0000>cnpm : 无法加载文件 E:\nodejs\node_global\cnpm.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies 解决方法：</font><br>以管理员身份运行windows powershell，运行命令set-ExecutionPolicy RemoteSigned</p><p>至此，node.js安装完成。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
